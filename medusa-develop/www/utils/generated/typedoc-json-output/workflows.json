{
	"id": 57986,
	"name": "workflows",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 59418,
			"name": "IDistributedTransactionStorage",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 59419,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59420,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59421,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59422,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 58387,
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											},
											{
												"type": "reference",
												"target": 59581,
												"name": "StepFeatures",
												"package": "@medusajs/orchestration"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 59423,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 59424,
															"name": "isCancelling",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
																	"line": 13,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																59424
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
															"line": 12,
															"character": 52
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 59461,
												"name": "TransactionCheckpoint",
												"package": "@medusajs/orchestration"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59425,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59426,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59427,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59428,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59461,
										"name": "TransactionCheckpoint",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59429,
									"name": "ttl",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 59430,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 59546,
										"name": "TransactionOptions",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59431,
					"name": "scheduleRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59432,
							"name": "scheduleRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59433,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58989,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59434,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59117,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59435,
									"name": "timestamp",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 59436,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59437,
					"name": "clearRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59438,
							"name": "clearRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59439,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58989,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59440,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59117,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59441,
					"name": "scheduleTransactionTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59442,
							"name": "scheduleTransactionTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59443,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58989,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59444,
									"name": "timestamp",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 59445,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59446,
					"name": "scheduleStepTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 19,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59447,
							"name": "scheduleStepTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59448,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58989,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59449,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59117,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59450,
									"name": "timestamp",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 59451,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59452,
					"name": "clearTransactionTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 20,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59453,
							"name": "clearTransactionTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 20,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59454,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58989,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59455,
					"name": "clearStepTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 21,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59456,
							"name": "clearStepTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 21,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59457,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58989,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59458,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59117,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59459,
					"name": "clearExpiredExecutions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 22,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59460,
							"name": "clearExpiredExecutions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 22,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						59419,
						59425,
						59431,
						59437,
						59441,
						59446,
						59452,
						59455,
						59459
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
					"line": 11,
					"character": 17
				}
			]
		},
		{
			"id": 58538,
			"name": "TransactionMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 14,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58539,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58540,
							"name": "model_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58541,
							"name": "idempotency_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58542,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58543,
							"name": "action_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58821,
								"name": "TransactionHandlerType",
								"package": "@medusajs/utils"
							}
						},
						{
							"id": 58544,
							"name": "attempt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 58545,
							"name": "timestamp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 20,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58540,
								58541,
								58542,
								58543,
								58544,
								58545
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 14,
							"character": 34
						}
					]
				}
			}
		},
		{
			"id": 58561,
			"name": "TransactionContext",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 58567,
					"name": "payload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Object containing the initial payload."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 58568,
					"name": "invoke",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Object containing responses of Invoke handlers on steps flagged with saveResponse."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 58569,
					"name": "compensate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Object containing responses of Compensate handlers on steps flagged with saveResponse."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 58562,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 32,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58563,
							"name": "TransactionContext",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 32,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58564,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 58565,
									"name": "invoke",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 58566,
									"name": "compensate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58561,
								"name": "TransactionContext",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						58562
					]
				},
				{
					"title": "Properties",
					"children": [
						58567,
						58568,
						58569
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 28,
					"character": 21
				}
			]
		},
		{
			"id": 59500,
			"name": "TransactionStepError",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 59506,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 35,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59507,
					"name": "handlerType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 36,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 58821,
						"name": "TransactionHandlerType",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 59508,
					"name": "error",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 37,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59501,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59502,
							"name": "TransactionStepError",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 38,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59503,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59504,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58821,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 59505,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59500,
								"name": "TransactionStepError",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						59501
					]
				},
				{
					"title": "Properties",
					"children": [
						59506,
						59507,
						59508
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 34,
					"character": 21
				}
			]
		},
		{
			"id": 59461,
			"name": "TransactionCheckpoint",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 59467,
					"name": "flow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 59470,
						"name": "TransactionFlow",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 59468,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 58561,
						"name": "TransactionContext",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 59469,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 59500,
							"name": "TransactionStepError",
							"package": "@medusajs/orchestration"
						}
					}
				},
				{
					"id": 59462,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59463,
							"name": "TransactionCheckpoint",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 44,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59464,
									"name": "flow",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59470,
										"name": "TransactionFlow",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59465,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58561,
										"name": "TransactionContext",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59466,
									"name": "errors",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 59500,
											"name": "TransactionStepError",
											"package": "@medusajs/orchestration"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59461,
								"name": "TransactionCheckpoint",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						59462
					]
				},
				{
					"title": "Properties",
					"children": [
						59467,
						59468,
						59469
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 40,
					"character": 21
				}
			]
		},
		{
			"id": 59572,
			"name": "TransactionPayload",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 59578,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 47,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 58538,
						"name": "TransactionMetadata",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 59579,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 48,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 59580,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 49,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 58561,
						"name": "TransactionContext",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 59573,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 55,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59574,
							"name": "TransactionPayload",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 55,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59575,
									"name": "metadata",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The metadata of the transaction."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 58538,
										"name": "TransactionMetadata",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59576,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The initial payload data to begin a transation."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 59577,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Object gathering responses of all steps flagged with saveResponse."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 58561,
										"name": "TransactionContext",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59572,
								"name": "TransactionPayload",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						59573
					]
				},
				{
					"title": "Properties",
					"children": [
						59578,
						59579,
						59580
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 46,
					"character": 21
				}
			]
		},
		{
			"id": 58989,
			"name": "DistributedTransaction",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "DistributedTransaction represents a distributed transaction, which is a transaction that is composed of multiple steps that are executed in a specific order."
					}
				]
			},
			"children": [
				{
					"id": 59009,
					"name": "#private",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 61,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59010,
					"name": "flow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 62,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59011,
					"name": "handler",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 63,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 59409,
						"name": "TransactionStepHandler",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 59012,
					"name": "payload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 64,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59013,
					"name": "modelId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59014,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 66,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59015,
					"name": "runId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 67,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59016,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 68,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59017,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 69,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58990,
					"name": "keyValueStore",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 70,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58991,
					"name": "setStorage",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 71,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 58992,
							"name": "setStorage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 71,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 58993,
									"name": "storage",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59418,
										"name": "IDistributedTransactionStorage",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 58994,
					"name": "keyPrefix",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 72,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59002,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 73,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59003,
							"name": "DistributedTransaction",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 73,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59004,
									"name": "flow",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59470,
										"name": "TransactionFlow",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59005,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59409,
										"name": "TransactionStepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59006,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 59007,
									"name": "errors",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 59500,
											"name": "TransactionStepError",
											"package": "@medusajs/orchestration"
										}
									}
								},
								{
									"id": 59008,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58561,
										"name": "TransactionContext",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58989,
								"name": "DistributedTransaction",
								"package": "@medusajs/orchestration"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 59018,
					"name": "getFlow",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 74,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59019,
							"name": "getFlow",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59470,
								"name": "TransactionFlow",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 59020,
					"name": "getContext",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 75,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59021,
							"name": "getContext",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 75,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58561,
								"name": "TransactionContext",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 59022,
					"name": "getErrors",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 76,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59023,
							"name": "getErrors",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 76,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59024,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58821,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 59500,
									"name": "TransactionStepError",
									"package": "@medusajs/orchestration"
								}
							}
						}
					]
				},
				{
					"id": 59025,
					"name": "addError",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 77,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59026,
							"name": "addError",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 77,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59027,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59028,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58821,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 59029,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 59030,
					"name": "addResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 78,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59031,
							"name": "addResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 78,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59032,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59033,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58821,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 59034,
									"name": "response",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 59035,
					"name": "hasFinished",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 79,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59036,
							"name": "hasFinished",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 79,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 59037,
					"name": "getState",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 80,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59038,
							"name": "getState",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59509,
								"name": "TransactionState",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 59039,
					"name": "isPartiallyCompleted",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 81,
							"character": 8
						}
					],
					"getSignature": {
						"id": 59040,
						"name": "isPartiallyCompleted",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
								"line": 81,
								"character": 8
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					}
				},
				{
					"id": 59041,
					"name": "canInvoke",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 82,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59042,
							"name": "canInvoke",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 82,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 59043,
					"name": "canRevert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 83,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59044,
							"name": "canRevert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 83,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 59045,
					"name": "hasTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 84,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59046,
							"name": "hasTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 59047,
					"name": "getTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 85,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59048,
							"name": "getTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 85,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 59049,
					"name": "saveCheckpoint",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 86,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59050,
							"name": "saveCheckpoint",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 86,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59051,
									"name": "ttl",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 59461,
												"name": "TransactionCheckpoint",
												"package": "@medusajs/orchestration"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58995,
					"name": "loadTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 87,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 58996,
							"name": "loadTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 87,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 58997,
									"name": "modelId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58998,
									"name": "transactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58999,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59000,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 59001,
													"name": "isCancelling",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
															"line": 88,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														59001
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
													"line": 87,
													"character": 77
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 59461,
												"name": "TransactionCheckpoint",
												"package": "@medusajs/orchestration"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59052,
					"name": "scheduleRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 90,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59053,
							"name": "scheduleRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 90,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59054,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59117,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59055,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59056,
					"name": "clearRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 91,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59057,
							"name": "clearRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 91,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59058,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59117,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59059,
					"name": "scheduleTransactionTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 92,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59060,
							"name": "scheduleTransactionTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 92,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59061,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59062,
					"name": "clearTransactionTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 93,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59063,
							"name": "clearTransactionTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 93,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59064,
					"name": "scheduleStepTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 94,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59065,
							"name": "scheduleStepTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 94,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59066,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59117,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59067,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59068,
					"name": "clearStepTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 95,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59069,
							"name": "clearStepTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 95,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59070,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59117,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59071,
					"name": "setTemporaryData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 96,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59072,
							"name": "setTemporaryData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 96,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59073,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59074,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 59075,
					"name": "getTemporaryData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 97,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59076,
							"name": "getTemporaryData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 97,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59077,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 59078,
					"name": "hasTemporaryData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 98,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59079,
							"name": "hasTemporaryData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 98,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59080,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						59002
					]
				},
				{
					"title": "Properties",
					"children": [
						59009,
						59010,
						59011,
						59012,
						59013,
						59014,
						59015,
						59016,
						59017,
						58990,
						58994
					]
				},
				{
					"title": "Accessors",
					"children": [
						59039
					]
				},
				{
					"title": "Methods",
					"children": [
						58991,
						59018,
						59020,
						59022,
						59025,
						59030,
						59035,
						59037,
						59041,
						59043,
						59045,
						59047,
						59049,
						58995,
						59052,
						59056,
						59059,
						59062,
						59064,
						59068,
						59071,
						59075,
						59078
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 60,
					"character": 14
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/@types/node/events.d.ts",
						"qualifiedName": "EventEmitter"
					},
					"name": "EventEmitter",
					"package": "@types/node"
				}
			]
		},
		{
			"id": 58792,
			"name": "BaseStepErrror",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 58798,
					"name": "#private",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58793,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58794,
							"name": "BaseStepErrror",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 3,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58795,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 58796,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58797,
									"name": "stepResponse",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58792,
								"name": "BaseStepErrror",
								"package": "@medusajs/orchestration"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Error.constructor"
					}
				},
				{
					"id": 58799,
					"name": "getStepResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58800,
							"name": "getStepResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 4,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						58793
					]
				},
				{
					"title": "Properties",
					"children": [
						58798
					]
				},
				{
					"title": "Methods",
					"children": [
						58799
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
					"line": 1,
					"character": 14
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Error"
					},
					"name": "Error",
					"package": "typescript"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 58395,
					"name": "SkipStepResponse"
				}
			]
		},
		{
			"id": 58395,
			"name": "SkipStepResponse",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 58403,
					"name": "#private",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 58798,
						"name": "BaseStepErrror.#private"
					}
				},
				{
					"id": 58404,
					"name": "getStepResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58405,
							"name": "getStepResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 4,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 58800,
								"name": "BaseStepErrror.getStepResponse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 58799,
						"name": "BaseStepErrror.getStepResponse"
					}
				},
				{
					"id": 58396,
					"name": "isSkipStepResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 11,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 58397,
							"name": "isSkipStepResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 11,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 58398,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "error",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 58395,
									"name": "SkipStepResponse",
									"package": "@medusajs/orchestration"
								}
							}
						}
					]
				},
				{
					"id": 58399,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58400,
							"name": "SkipStepResponse",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58401,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58402,
									"name": "stepResponse",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58395,
								"name": "SkipStepResponse",
								"package": "@medusajs/orchestration"
							},
							"overwrites": {
								"type": "reference",
								"target": 58794,
								"name": "BaseStepErrror.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 58793,
						"name": "BaseStepErrror.constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						58399
					]
				},
				{
					"title": "Properties",
					"children": [
						58403
					]
				},
				{
					"title": "Methods",
					"children": [
						58404,
						58396
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
					"line": 10,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 58792,
					"name": "BaseStepErrror",
					"package": "@medusajs/orchestration"
				}
			]
		},
		{
			"id": 58801,
			"name": "InternalStep",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the structure and behavior of a single step within a transaction workflow."
					}
				]
			},
			"children": [
				{
					"id": 58802,
					"name": "next",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the next step(s) to execute after this step. Can be a single step or an array of steps."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 58801,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 58801,
									"name": "InternalStep",
									"package": "@medusajs/orchestration"
								}
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.next"
					}
				},
				{
					"id": 58803,
					"name": "depth",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 58804,
					"name": "parent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 58801,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							}
						]
					}
				},
				{
					"id": 58805,
					"name": "uuid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique identifier for the transaction step.\nThis is set automatically when declaring a workflow with \"createWorkflow\""
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.uuid"
					}
				},
				{
					"id": 58806,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the action to be performed in this step.\n\"name\" is an alias for action when creating a workflow with \"createWorkflow\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.action"
					}
				},
				{
					"id": 58807,
					"name": "continueOnPermanentFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the workflow should continue even if there is a permanent failure in this step.\nIn case it is set to true, the the current step will be marked as TransactionStepState.PERMANENT_FAILURE and the next steps will be executed."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.continueOnPermanentFailure"
					}
				},
				{
					"id": 58808,
					"name": "skipOnPermanentFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the workflow should skip all subsequent steps in case of a permanent failure in this step.\nIn case it is set to true, the next steps of the workflow will not be executed and their status will be marked as TransactionStepState.SKIPPED_FAILURE.\nIn case it is a string, the next steps until the step name provided will be skipped and the workflow will be resumed from the step provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.skipOnPermanentFailure"
					}
				},
				{
					"id": 58809,
					"name": "noCompensation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, no compensation action will be triggered for this step in case of a failure."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.noCompensation"
					}
				},
				{
					"id": 58810,
					"name": "maxRetries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of times this step should be retried in case of temporary failures.\nThe default is 0 (no retries)."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.maxRetries"
					}
				},
				{
					"id": 58811,
					"name": "retryInterval",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The interval (in seconds) between retry attempts after a temporary failure.\nThe default is to retry immediately."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.retryInterval"
					}
				},
				{
					"id": 58812,
					"name": "retryIntervalAwaiting",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The interval (in seconds) to retry a step even if its status is \"TransactionStepStatus.WAITING\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 47,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.retryIntervalAwaiting"
					}
				},
				{
					"id": 58813,
					"name": "timeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum amount of time (in seconds) to wait for this step to complete.\nThis is NOT an execution timeout, the step will always be executed and wait for its response.\nIf the response is not received within the timeout set, it will be marked as \"TransactionStepStatus.TIMEOUT\" and the workflow will be reverted as soon as it receives the response."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 53,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.timeout"
					}
				},
				{
					"id": 58814,
					"name": "async",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the step is executed asynchronously. This means that the workflow will not wait for the response of this step.\nAsync steps require to have their responses set using \"setStepSuccess\" or \"setStepFailure\", unless it is combined with \"backgroundExecution: true\".\nIf combined with a timeout, and any response is not set within that interval, the step will be marked as \"TransactionStepStatus.TIMEOUT\" and the workflow will be reverted immediately."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 59,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.async"
					}
				},
				{
					"id": 58815,
					"name": "nested",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "It flags where the step contains a sub transaction inside itself."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 63,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.nested"
					}
				},
				{
					"id": 58816,
					"name": "backgroundExecution",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "It applies to \"async\" steps only, allowing them to run in the background and automatically complete without external intervention.\nIt is ideal for time-consuming tasks that will be complete after the execution, contrasting with standard \"async\" operations that require a response to be set in a later stage."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 68,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.backgroundExecution"
					}
				},
				{
					"id": 58817,
					"name": "compensateAsync",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the compensation function for this step is executed asynchronously. Which means, the response has to be set using \"setStepSuccess\" or \"setStepFailure\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 72,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.compensateAsync"
					}
				},
				{
					"id": 58818,
					"name": "noWait",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the workflow will not wait for their sibling steps to complete before moving to the next step."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 76,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.noWait"
					}
				},
				{
					"id": 58819,
					"name": "saveResponse",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the response of this step will be stored.\nDefault is true."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 81,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.saveResponse"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						58802,
						58803,
						58804,
						58805,
						58806,
						58807,
						58808,
						58809,
						58810,
						58811,
						58812,
						58813,
						58814,
						58815,
						58816,
						58817,
						58818,
						58819
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
					"line": 2,
					"character": 10
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 58369,
					"name": "TransactionStepsDefinition",
					"package": "@medusajs/orchestration"
				}
			]
		},
		{
			"id": 58424,
			"name": "OrchestratorBuilder",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 58428,
					"name": "steps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 8,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 58801,
						"name": "InternalStep",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 58429,
					"name": "hasChanges_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 9,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 58430,
					"name": "hasChanges",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 10,
							"character": 8
						}
					],
					"getSignature": {
						"id": 58431,
						"name": "hasChanges",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
								"line": 10,
								"character": 8
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					}
				},
				{
					"id": 58425,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58426,
							"name": "OrchestratorBuilder",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 11,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58427,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58369,
										"name": "TransactionStepsDefinition",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58424,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58432,
					"name": "load",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58433,
							"name": "load",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58434,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58369,
										"name": "TransactionStepsDefinition",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 58435,
					"name": "addAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58436,
							"name": "addAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 13,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58437,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58438,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 58369,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 58439,
					"name": "replaceAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58440,
							"name": "replaceAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 14,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58441,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58442,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58443,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 58369,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 58444,
					"name": "insertActionBefore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58445,
							"name": "insertActionBefore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58446,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58447,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58448,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 58369,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 58449,
					"name": "insertActionAfter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58450,
							"name": "insertActionAfter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58451,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58452,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58453,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 58369,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 58454,
					"name": "appendTo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 17,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 58455,
							"name": "appendTo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 17,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 58456,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 58801,
												"name": "InternalStep",
												"package": "@medusajs/orchestration"
											}
										]
									}
								},
								{
									"id": 58457,
									"name": "newStep",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58801,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 58458,
					"name": "appendAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58459,
							"name": "appendAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58460,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58461,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58462,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 58369,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 58463,
					"name": "move",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 19,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 58464,
							"name": "move",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 19,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 58465,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58466,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58467,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58468,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 58469,
													"name": "runInParallel",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
															"line": 20,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 58470,
													"name": "mergeNext",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
															"line": 21,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														58469,
														58470
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
													"line": 19,
													"character": 95
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58424,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58471,
					"name": "moveAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58472,
							"name": "moveAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58473,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58474,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58424,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58475,
					"name": "moveAndMergeNextAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 24,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58476,
							"name": "moveAndMergeNextAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 24,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58477,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58478,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58424,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58479,
					"name": "mergeActions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58480,
							"name": "mergeActions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 25,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58481,
									"name": "where",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58482,
									"name": "actions",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 58483,
					"name": "deleteAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58484,
							"name": "deleteAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58485,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58486,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58801,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 58487,
					"name": "pruneAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58488,
							"name": "pruneAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 27,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58489,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 58490,
					"name": "findStepByAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 28,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 58491,
							"name": "findStepByAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 28,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 58492,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58493,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58801,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 58801,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								]
							}
						}
					]
				},
				{
					"id": 58494,
					"name": "findOrThrowStepByAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 29,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 58495,
							"name": "findOrThrowStepByAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 29,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 58496,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58497,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58801,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58801,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58498,
					"name": "findParentStepByAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 30,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 58499,
							"name": "findParentStepByAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 30,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 58500,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58501,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58801,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 58801,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								]
							}
						}
					]
				},
				{
					"id": 58502,
					"name": "findLastStep",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 31,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 58503,
							"name": "findLastStep",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 31,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 58504,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58801,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58801,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58505,
					"name": "updateDepths",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 32,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 58506,
							"name": "updateDepths",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 32,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 58507,
									"name": "startingStep",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58801,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58508,
									"name": "parent",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 58509,
									"name": "incr",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 58510,
									"name": "beginFrom",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 58511,
					"name": "build",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58512,
							"name": "build",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58369,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						58425
					]
				},
				{
					"title": "Properties",
					"children": [
						58428,
						58429
					]
				},
				{
					"title": "Accessors",
					"children": [
						58430
					]
				},
				{
					"title": "Methods",
					"children": [
						58432,
						58435,
						58439,
						58444,
						58449,
						58454,
						58458,
						58463,
						58471,
						58475,
						58479,
						58483,
						58487,
						58490,
						58494,
						58498,
						58502,
						58505,
						58511
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
					"line": 7,
					"character": 21
				}
			]
		},
		{
			"id": 59181,
			"name": "TransactionOrchestrator",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "TransactionOrchestrator is responsible for managing and executing distributed transactions.\nIt is based on a single transaction definition, which is used to execute all the transaction steps"
					}
				]
			},
			"children": [
				{
					"id": 59250,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59182,
					"name": "ROOT_STEP",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 11,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59183,
					"name": "DEFAULT_TTL",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 12,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 59251,
					"name": "invokeSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 13,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59252,
					"name": "compensateSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 14,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59253,
					"name": "definition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 15,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59254,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59184,
					"name": "DEFAULT_RETRIES",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 17,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 59185,
					"name": "workflowOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 18,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59186,
					"name": "getWorkflowOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 19,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 59187,
							"name": "getWorkflowOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 19,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 59188,
									"name": "modelId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59546,
								"name": "TransactionOptions",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 59189,
					"name": "traceTransaction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trace workflow transaction for instrumentation"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 23,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59190,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 23,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 59191,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
											"line": 23,
											"character": 30
										}
									],
									"parameters": [
										{
											"id": 59192,
											"name": "transactionResume",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 59193,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 23,
															"character": 50
														}
													],
													"signatures": [
														{
															"id": 59194,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 23,
																	"character": 50
																}
															],
															"parameters": [
																{
																	"id": 59195,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 59196,
											"name": "metadata",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 59197,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 59198,
															"name": "model_id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 24,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 59199,
															"name": "transaction_id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 25,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 59200,
															"name": "flow_metadata",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 26,
																	"character": 8
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 59201,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 59202,
																					"name": "eventGroupId",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 223,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 59203,
																					"name": "parentIdempotencyKey",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 224,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 59204,
																					"name": "sourcePath",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 225,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 59205,
																					"name": "preventReleaseEvents",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 226,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "boolean"
																					}
																				},
																				{
																					"id": 59206,
																					"name": "parentStepIdempotencyKey",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 227,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						59202,
																						59203,
																						59204,
																						59205,
																						59206
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																					"line": 222,
																					"character": 15
																				}
																			],
																			"indexSignatures": [
																				{
																					"id": 59207,
																					"name": "__index",
																					"variant": "signature",
																					"kind": 8192,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 228,
																							"character": 8
																						}
																					],
																					"parameters": [
																						{
																							"id": 59208,
																							"name": "key",
																							"variant": "param",
																							"kind": 32768,
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "unknown"
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																59198,
																59199,
																59200
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 23,
															"character": 95
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 59209,
					"name": "traceStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trace workflow steps for instrumentation"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 31,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59210,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 31,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 59211,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
											"line": 31,
											"character": 23
										}
									],
									"parameters": [
										{
											"id": 59212,
											"name": "handler",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 59213,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 31,
															"character": 33
														}
													],
													"signatures": [
														{
															"id": 59214,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 31,
																	"character": 33
																}
															],
															"parameters": [
																{
																	"id": 59215,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 59216,
											"name": "metadata",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 59217,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 59218,
															"name": "action",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 32,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 59219,
															"name": "type",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 33,
																	"character": 8
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "invoke"
																	},
																	{
																		"type": "literal",
																		"value": "compensate"
																	}
																]
															}
														},
														{
															"id": 59220,
															"name": "step_id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 34,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 59221,
															"name": "step_uuid",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 35,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 59222,
															"name": "attempts",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 36,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 59223,
															"name": "failures",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 37,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 59224,
															"name": "async",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 38,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 59225,
															"name": "idempotency_key",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 39,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																59218,
																59219,
																59220,
																59221,
																59222,
																59223,
																59224,
																59225
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 31,
															"character": 77
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 59242,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59243,
							"name": "TransactionOrchestrator",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 41,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59244,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59245,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 59246,
													"name": "id",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 42,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 59247,
													"name": "definition",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 43,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 58369,
														"name": "TransactionStepsDefinition",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 59248,
													"name": "options",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 44,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 58387,
														"name": "TransactionModelOptions",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 59249,
													"name": "isClone",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 45,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														59246,
														59247,
														59248,
														59249
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 41,
													"character": 55
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59181,
								"name": "TransactionOrchestrator",
								"package": "@medusajs/orchestration"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 59226,
					"name": "isExpectedError",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 47,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59227,
					"name": "clone",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 48,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 59228,
							"name": "clone",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 48,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 59229,
									"name": "orchestrator",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59181,
										"name": "TransactionOrchestrator",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 59181,
								"name": "TransactionOrchestrator",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 59230,
					"name": "SEPARATOR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 49,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59231,
					"name": "getKeyName",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 50,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 59232,
							"name": "getKeyName",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 50,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 59233,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 59255,
					"name": "getPreviousStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 51,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59256,
					"name": "getOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 52,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59257,
							"name": "getOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58387,
								"name": "TransactionModelOptions",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 59258,
					"name": "getInvokeSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 53,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59259,
					"name": "getCompensationSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 54,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59260,
					"name": "canMoveForward",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 55,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59261,
					"name": "canMoveBackward",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 56,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59262,
					"name": "canContinue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 57,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59263,
					"name": "hasExpired",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 58,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59264,
					"name": "checkTransactionTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 59,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59265,
					"name": "checkStepTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 60,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59266,
					"name": "checkAllSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 61,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59267,
					"name": "computeCurrentTransactionState",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 62,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59268,
					"name": "flagStepsToRevert",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 63,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59234,
					"name": "setStepSuccess",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 64,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59235,
					"name": "skipStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 65,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59236,
					"name": "setStepTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 66,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59237,
					"name": "setStepFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 67,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59269,
					"name": "executeNext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 68,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59270,
					"name": "finalizeTransaction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Finalize the transaction when all steps are complete"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 72,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59271,
					"name": "prepareStepForExecution",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Prepare a step for execution by setting state and incrementing attempts"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 76,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59272,
					"name": "createStepPayload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create the payload for a step execution"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 80,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59273,
					"name": "prepareHandlerArgs",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Prepare handler arguments for step execution"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 84,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59274,
					"name": "createStepExecutionPromise",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create the step execution promise with optional tracing"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 88,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59275,
					"name": "executeSyncStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Execute a synchronous step and handle its result"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 92,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59276,
					"name": "executeAsyncStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Execute an asynchronous step and handle its result"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 96,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59277,
					"name": "handleStepExpiration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Check if step or transaction has expired and handle timeouts"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 100,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59278,
					"name": "handleStepSuccess",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle successful step completion"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 104,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59279,
					"name": "handleStepFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle step failure"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 108,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59280,
					"name": "resume",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 113,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59281,
							"name": "resume",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Start a new transaction or resume a transaction that has been previously started"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 113,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59282,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction to resume"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 58989,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59283,
					"name": "cancelTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 118,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59284,
							"name": "cancelTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Cancel and revert a transaction compensating all its executed steps. It can be an ongoing transaction or a completed one"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 118,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59285,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction to be reverted"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 58989,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59286,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59287,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 59288,
													"name": "preventExecuteNext",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 119,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														59288
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 118,
													"character": 73
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59289,
					"name": "parseFlowOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 121,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59290,
					"name": "createTransactionFlow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 122,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59238,
					"name": "loadTransactionById",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 123,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59239,
					"name": "buildSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 124,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59291,
					"name": "beginTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 131,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59292,
							"name": "beginTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new transaction"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 131,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59293,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59294,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 59295,
													"name": "transactionId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 132,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 59296,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 133,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 59409,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 59297,
													"name": "payload",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 134,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												},
												{
													"id": 59298,
													"name": "flowMetadata",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 135,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 59299,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 59300,
																	"name": "eventGroupId",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 223,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 59301,
																	"name": "parentIdempotencyKey",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 224,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 59302,
																	"name": "sourcePath",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 225,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 59303,
																	"name": "preventReleaseEvents",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 226,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 59304,
																	"name": "parentStepIdempotencyKey",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 227,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		59300,
																		59301,
																		59302,
																		59303,
																		59304
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 222,
																	"character": 15
																}
															],
															"indexSignatures": [
																{
																	"id": 59305,
																	"name": "__index",
																	"variant": "signature",
																	"kind": 8192,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 228,
																			"character": 8
																		}
																	],
																	"parameters": [
																		{
																			"id": 59306,
																			"name": "key",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															]
														}
													}
												},
												{
													"id": 59307,
													"name": "onLoad",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 136,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 59308,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 136,
																	"character": 17
																}
															],
															"signatures": [
																{
																	"id": 59309,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																			"line": 136,
																			"character": 17
																		}
																	],
																	"parameters": [
																		{
																			"id": 59310,
																			"name": "transaction",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 58989,
																				"name": "DistributedTransaction",
																				"package": "@medusajs/orchestration"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "void"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														59295,
														59296,
														59297,
														59298,
														59307
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 131,
													"character": 81
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 58989,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59311,
					"name": "retrieveExistingTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 142,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59312,
							"name": "retrieveExistingTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an existing transaction"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 142,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59313,
									"name": "transactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "unique identifier of the transaction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59314,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "function to handle action of the transaction"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 59409,
										"name": "TransactionStepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59315,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59316,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 59317,
													"name": "isCancelling",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 143,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														59317
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 142,
													"character": 98
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 58989,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59240,
					"name": "getStepByAction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 145,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59241,
					"name": "getTransactionAndStepFromIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 146,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59318,
					"name": "skipStep",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 152,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59319,
							"name": "skipStep",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Skip the execution of a specific transaction and step"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 152,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59320,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59321,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 59322,
													"name": "responseIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 153,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 59323,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 154,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 59409,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 59324,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 155,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 58989,
														"name": "DistributedTransaction",
														"package": "@medusajs/orchestration"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														59322,
														59323,
														59324
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 152,
													"character": 64
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 58989,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59325,
					"name": "registerStepSuccess",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 163,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59326,
							"name": "registerStepSuccess",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Register a step success for a specific transaction and step"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 163,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59327,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59328,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 59329,
													"name": "responseIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 164,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 59330,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 165,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 59409,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 59331,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 166,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 58989,
														"name": "DistributedTransaction",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 59332,
													"name": "response",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 167,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												},
												{
													"id": 59333,
													"name": "onLoad",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 168,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 59334,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 168,
																	"character": 17
																}
															],
															"signatures": [
																{
																	"id": 59335,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																			"line": 168,
																			"character": 17
																		}
																	],
																	"parameters": [
																		{
																			"id": 59336,
																			"name": "transaction",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 58989,
																				"name": "DistributedTransaction",
																				"package": "@medusajs/orchestration"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "void"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														59329,
														59330,
														59331,
														59332,
														59333
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 163,
													"character": 93
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 58989,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 59337,
					"name": "registerStepFailure",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 178,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59338,
							"name": "registerStepFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Register a step failure for a specific transaction and step"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 178,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59339,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 59340,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 59341,
													"name": "responseIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 179,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 59342,
													"name": "error",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 180,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 59343,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 181,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 59409,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 59344,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 182,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 58989,
														"name": "DistributedTransaction",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 59345,
													"name": "onLoad",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 183,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 59346,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 183,
																	"character": 17
																}
															],
															"signatures": [
																{
																	"id": 59347,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																			"line": 183,
																			"character": 17
																		}
																	],
																	"parameters": [
																		{
																			"id": 59348,
																			"name": "transaction",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 58989,
																				"name": "DistributedTransaction",
																				"package": "@medusajs/orchestration"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "void"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														59341,
														59342,
														59343,
														59344,
														59345
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 178,
													"character": 90
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 58989,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						59242
					]
				},
				{
					"title": "Properties",
					"children": [
						59250,
						59182,
						59183,
						59251,
						59252,
						59253,
						59254,
						59184,
						59185,
						59189,
						59209,
						59226,
						59230,
						59255,
						59258,
						59259,
						59260,
						59261,
						59262,
						59263,
						59264,
						59265,
						59266,
						59267,
						59268,
						59234,
						59235,
						59236,
						59237,
						59269,
						59270,
						59271,
						59272,
						59273,
						59274,
						59275,
						59276,
						59277,
						59278,
						59279,
						59289,
						59290,
						59238,
						59239,
						59240,
						59241
					]
				},
				{
					"title": "Methods",
					"children": [
						59186,
						59227,
						59231,
						59256,
						59280,
						59283,
						59291,
						59311,
						59318,
						59325,
						59337
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
					"line": 9,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/@types/node/events.d.ts",
						"qualifiedName": "EventEmitter"
					},
					"name": "EventEmitter",
					"package": "@types/node"
				}
			]
		},
		{
			"id": 59409,
			"name": "TransactionStepHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
					"line": 5,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59410,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 5,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 59411,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 59412,
									"name": "actionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59413,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58821,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 59414,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59572,
										"name": "TransactionPayload",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59415,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58989,
										"name": "DistributedTransactionType",
										"package": "@medusajs/orchestration",
										"qualifiedName": "DistributedTransaction"
									}
								},
								{
									"id": 59416,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59117,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 59417,
									"name": "orchestrator",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59181,
										"name": "TransactionOrchestrator",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 59117,
			"name": "TransactionStep",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "TransactionStep"
					}
				],
				"blockTags": [
					{
						"tag": "@classdesc",
						"content": [
							{
								"kind": "text",
								"text": "A class representing a single step in a transaction flow"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 59118,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 59119,
							"name": "TransactionStep",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 59117,
								"name": "TransactionStep",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 59120,
					"name": "stepFailed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "id - The id of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "depth - The depth of the step in the flow"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "definition - The definition of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "invoke - The current state and status of the invoke action of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "compensate - The current state and status of the compensate action of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "attempts - The number of attempts made to execute the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "failures - The number of failures encountered while executing the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "lastAttempt - The timestamp of the last attempt made to execute the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "hasScheduledRetry - A flag indicating if a retry has been scheduled"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "retryRescheduledAt - The timestamp of the last retry scheduled"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "next - The ids of the next steps in the flow"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "saveResponse - A flag indicating if the response of a step should be shared in the transaction context and available to subsequent steps - default is true"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 25,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 59121,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59122,
					"name": "uuid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59123,
					"name": "depth",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 59124,
					"name": "definition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 58369,
						"name": "TransactionStepsDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 59125,
					"name": "invoke",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59126,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59127,
									"name": "state",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 31,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 59529,
										"name": "TransactionStepState",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 59128,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 32,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 59540,
										"name": "TransactionStepStatus",
										"package": "@medusajs/utils"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59127,
										59128
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 30,
									"character": 12
								}
							]
						}
					}
				},
				{
					"id": 59129,
					"name": "compensate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59130,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59131,
									"name": "state",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 35,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 59529,
										"name": "TransactionStepState",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 59132,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 36,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 59540,
										"name": "TransactionStepStatus",
										"package": "@medusajs/utils"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59131,
										59132
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 34,
									"character": 16
								}
							]
						}
					}
				},
				{
					"id": 59133,
					"name": "attempts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 59134,
					"name": "failures",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 39,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 59135,
					"name": "lastAttempt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 40,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 59136,
					"name": "retryRescheduledAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 59137,
					"name": "hasScheduledRetry",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 59138,
					"name": "timedOutAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 59139,
					"name": "startedAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 59140,
					"name": "next",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 45,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 59141,
					"name": "saveResponse",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 46,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 59142,
					"name": "getStates",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 47,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59143,
							"name": "getStates",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 47,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 59144,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 59145,
											"name": "state",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
													"line": 48,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 59529,
												"name": "TransactionStepState",
												"package": "@medusajs/utils"
											}
										},
										{
											"id": 59146,
											"name": "status",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
													"line": 49,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 59540,
												"name": "TransactionStepStatus",
												"package": "@medusajs/utils"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												59145,
												59146
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 47,
											"character": 17
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 59147,
					"name": "beginCompensation",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 51,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59148,
							"name": "beginCompensation",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 51,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 59149,
					"name": "isCompensating",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 52,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59150,
							"name": "isCompensating",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 59151,
					"name": "isInvoking",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 53,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59152,
							"name": "isInvoking",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 53,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 59153,
					"name": "changeState",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 54,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59154,
							"name": "changeState",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 54,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59155,
									"name": "toState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59529,
										"name": "TransactionStepState",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 59156,
					"name": "changeStatus",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 55,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59157,
							"name": "changeStatus",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 55,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59158,
									"name": "toStatus",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59540,
										"name": "TransactionStepStatus",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 59159,
					"name": "hasRetryScheduled",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 56,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59160,
							"name": "hasRetryScheduled",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 56,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 59161,
					"name": "hasRetryInterval",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 57,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59162,
							"name": "hasRetryInterval",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 57,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 59163,
					"name": "hasTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 58,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59164,
							"name": "hasTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 58,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 59165,
					"name": "getTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 59,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59166,
							"name": "getTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 59,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 59167,
					"name": "canRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 60,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59168,
							"name": "canRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 60,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 59169,
					"name": "hasAwaitingRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 61,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59170,
							"name": "hasAwaitingRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 61,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 59171,
					"name": "canRetryAwaiting",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 62,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59172,
							"name": "canRetryAwaiting",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 62,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 59173,
					"name": "canInvoke",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 63,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59174,
							"name": "canInvoke",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 63,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59175,
									"name": "flowState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59509,
										"name": "TransactionState",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 59176,
					"name": "canCompensate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 64,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59177,
							"name": "canCompensate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 64,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 59178,
									"name": "flowState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59509,
										"name": "TransactionState",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 59179,
					"name": "canCancel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 59180,
							"name": "canCancel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 65,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						59118
					]
				},
				{
					"title": "Properties",
					"children": [
						59120,
						59121,
						59122,
						59123,
						59124,
						59125,
						59129,
						59133,
						59134,
						59135,
						59136,
						59137,
						59138,
						59139,
						59140,
						59141
					]
				},
				{
					"title": "Methods",
					"children": [
						59142,
						59147,
						59149,
						59151,
						59153,
						59156,
						59159,
						59161,
						59163,
						59165,
						59167,
						59169,
						59171,
						59173,
						59176,
						59179
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
					"line": 10,
					"character": 21
				}
			]
		},
		{
			"id": 58369,
			"name": "TransactionStepsDefinition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the structure and behavior of a single step within a transaction workflow."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58370,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58371,
							"name": "uuid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique identifier for the transaction step.\nThis is set automatically when declaring a workflow with \"createWorkflow\""
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58372,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies the action to be performed in this step.\n\"name\" is an alias for action when creating a workflow with \"createWorkflow\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58373,
							"name": "continueOnPermanentFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the workflow should continue even if there is a permanent failure in this step.\nIn case it is set to true, the the current step will be marked as TransactionStepState.PERMANENT_FAILURE and the next steps will be executed."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58374,
							"name": "skipOnPermanentFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the workflow should skip all subsequent steps in case of a permanent failure in this step.\nIn case it is set to true, the next steps of the workflow will not be executed and their status will be marked as TransactionStepState.SKIPPED_FAILURE.\nIn case it is a string, the next steps until the step name provided will be skipped and the workflow will be resumed from the step provided."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 58375,
							"name": "noCompensation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, no compensation action will be triggered for this step in case of a failure."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58376,
							"name": "maxRetries",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of times this step should be retried in case of temporary failures.\nThe default is 0 (no retries)."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 38,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 58377,
							"name": "retryInterval",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The interval (in seconds) between retry attempts after a temporary failure.\nThe default is to retry immediately."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 43,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 58378,
							"name": "retryIntervalAwaiting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The interval (in seconds) to retry a step even if its status is \"TransactionStepStatus.WAITING\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 47,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 58379,
							"name": "timeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum amount of time (in seconds) to wait for this step to complete.\nThis is NOT an execution timeout, the step will always be executed and wait for its response.\nIf the response is not received within the timeout set, it will be marked as \"TransactionStepStatus.TIMEOUT\" and the workflow will be reverted as soon as it receives the response."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 53,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 58380,
							"name": "async",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the step is executed asynchronously. This means that the workflow will not wait for the response of this step.\nAsync steps require to have their responses set using \"setStepSuccess\" or \"setStepFailure\", unless it is combined with \"backgroundExecution: true\".\nIf combined with a timeout, and any response is not set within that interval, the step will be marked as \"TransactionStepStatus.TIMEOUT\" and the workflow will be reverted immediately."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 59,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58381,
							"name": "nested",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "It flags where the step contains a sub transaction inside itself."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 63,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58382,
							"name": "backgroundExecution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "It applies to \"async\" steps only, allowing them to run in the background and automatically complete without external intervention.\nIt is ideal for time-consuming tasks that will be complete after the execution, contrasting with standard \"async\" operations that require a response to be set in a later stage."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58383,
							"name": "compensateAsync",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the compensation function for this step is executed asynchronously. Which means, the response has to be set using \"setStepSuccess\" or \"setStepFailure\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 72,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58384,
							"name": "noWait",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the workflow will not wait for their sibling steps to complete before moving to the next step."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 76,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58385,
							"name": "saveResponse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the response of this step will be stored.\nDefault is true."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 81,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58386,
							"name": "next",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the next step(s) to execute after this step. Can be a single step or an array of steps."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 85,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 58369,
										"name": "TransactionStepsDefinition",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 58369,
											"name": "TransactionStepsDefinition",
											"package": "@medusajs/orchestration"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58371,
								58372,
								58373,
								58374,
								58375,
								58376,
								58377,
								58378,
								58379,
								58380,
								58381,
								58382,
								58383,
								58384,
								58385,
								58386
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 8,
							"character": 41
						}
					]
				}
			},
			"extendedBy": [
				{
					"type": "reference",
					"target": 58801,
					"name": "InternalStep"
				}
			]
		},
		{
			"id": 58387,
			"name": "TransactionModelOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the options for a transaction model, which are applicable to the entire workflow."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 90,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58388,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58389,
							"name": "timeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The global timeout for the entire transaction workflow (in seconds)."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 94,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 58390,
							"name": "store",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the state of the transaction will be persisted.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/store-executions)."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 100,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58391,
							"name": "retentionTime",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of seconds that the workflow execution should be stored in the database.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/store-executions)."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 106,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 58392,
							"name": "storeExecution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the execution details of each step will be stored."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "no longer needed."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 111,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58393,
							"name": "idempotent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the workflow will use the transaction ID as the key to ensure only-once execution"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58394,
							"name": "schedule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the workflow as a scheduled workflow that executes based on the cron configuration passed.\nThe value can either by a cron expression string, or an object that also allows to define the concurrency behavior."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 120,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 58784,
										"name": "SchedulerOptions",
										"package": "@medusajs/orchestration"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58389,
								58390,
								58391,
								58392,
								58393,
								58394
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 90,
							"character": 38
						}
					]
				}
			}
		},
		{
			"id": 58784,
			"name": "SchedulerOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 122,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 58785,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58786,
									"name": "concurrency",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Setting whether to allow concurrent executions (eg. if the previous execution is still running, should the new one be allowed to run or not)\nBy default concurrent executions are not allowed."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 127,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "allow"
											},
											{
												"type": "literal",
												"value": "forbid"
											}
										]
									}
								},
								{
									"id": 58787,
									"name": "numberOfExecutions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optionally limit the number of executions for the scheduled workflow. If not set, the workflow will run indefinitely."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 131,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58786,
										58787
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 122,
									"character": 31
								}
							]
						}
					},
					{
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 58788,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 58789,
											"name": "cron",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The cron expression to schedule the workflow execution."
													}
												]
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 136,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												58789
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 132,
											"character": 5
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 58790,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 58791,
											"name": "interval",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The interval (in ms) to schedule the workflow execution."
													}
												]
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 141,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												58791
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 137,
											"character": 4
										}
									]
								}
							}
						]
					}
				]
			}
		},
		{
			"id": 58906,
			"name": "DistributedTransactionEvents",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 163,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58907,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58908,
							"name": "onBegin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 164,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58909,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 164,
											"character": 14
										}
									],
									"signatures": [
										{
											"id": 58910,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58911,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58912,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58913,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 165,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58989,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58913
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 164,
																	"character": 21
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58914,
							"name": "onResume",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 167,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58915,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 167,
											"character": 15
										}
									],
									"signatures": [
										{
											"id": 58916,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58917,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58918,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58919,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 168,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58989,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58919
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 167,
																	"character": 22
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58920,
							"name": "onFinish",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 170,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58921,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 170,
											"character": 15
										}
									],
									"signatures": [
										{
											"id": 58922,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58923,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58924,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58925,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 171,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58989,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																},
																{
																	"id": 58926,
																	"name": "result",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 172,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																},
																{
																	"id": 58927,
																	"name": "errors",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 173,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "unknown"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58925,
																		58926,
																		58927
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 170,
																	"character": 22
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58928,
							"name": "onTimeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 175,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58929,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 175,
											"character": 16
										}
									],
									"signatures": [
										{
											"id": 58930,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58931,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58932,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58933,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 176,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58989,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58933
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 175,
																	"character": 23
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58934,
							"name": "onStepBegin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 178,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58935,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 178,
											"character": 18
										}
									],
									"signatures": [
										{
											"id": 58936,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58937,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58938,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58939,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 179,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 59117,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 58940,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 180,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58989,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58939,
																		58940
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 178,
																	"character": 25
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58941,
							"name": "onStepSuccess",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 182,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58942,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 182,
											"character": 20
										}
									],
									"signatures": [
										{
											"id": 58943,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58944,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58945,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58946,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 183,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 59117,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 58947,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 184,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58989,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58946,
																		58947
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 182,
																	"character": 27
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58948,
							"name": "onStepFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 186,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58949,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 186,
											"character": 20
										}
									],
									"signatures": [
										{
											"id": 58950,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58951,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58952,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58953,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 187,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 59117,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 58954,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 188,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58989,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58953,
																		58954
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 186,
																	"character": 27
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58955,
							"name": "onStepAwaiting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 190,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58956,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 190,
											"character": 21
										}
									],
									"signatures": [
										{
											"id": 58957,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58958,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58959,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58960,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 191,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 59117,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 58961,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 192,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58989,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58960,
																		58961
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 190,
																	"character": 28
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58962,
							"name": "onCompensateBegin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 194,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58963,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 194,
											"character": 24
										}
									],
									"signatures": [
										{
											"id": 58964,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58965,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58966,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58967,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 195,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58989,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58967
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 194,
																	"character": 31
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58968,
							"name": "onCompensateStepSuccess",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 197,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58969,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 197,
											"character": 30
										}
									],
									"signatures": [
										{
											"id": 58970,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58971,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58972,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58973,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 198,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 59117,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 58974,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 199,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58989,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58973,
																		58974
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 197,
																	"character": 37
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58975,
							"name": "onCompensateStepFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 201,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58976,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 201,
											"character": 30
										}
									],
									"signatures": [
										{
											"id": 58977,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58978,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58979,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58980,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 202,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 59117,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 58981,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 203,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58989,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58980,
																		58981
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 201,
																	"character": 37
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58982,
							"name": "onStepSkipped",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 205,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58983,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 205,
											"character": 20
										}
									],
									"signatures": [
										{
											"id": 58984,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58985,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58986,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58987,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 206,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 59117,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 58988,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 207,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58989,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58987,
																		58988
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 205,
																	"character": 27
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58908,
								58914,
								58920,
								58928,
								58934,
								58941,
								58948,
								58955,
								58962,
								58968,
								58975,
								58982
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 163,
							"character": 43
						}
					]
				}
			}
		},
		{
			"id": 59581,
			"name": "StepFeatures",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 210,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59582,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59583,
							"name": "hasAsyncSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 211,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59584,
							"name": "hasStepTimeouts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 212,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59585,
							"name": "hasRetriesTimeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 213,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59583,
								59584,
								59585
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 210,
							"character": 27
						}
					]
				}
			}
		},
		{
			"id": 59546,
			"name": "TransactionOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 215,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 58387,
						"name": "TransactionModelOptions",
						"package": "@medusajs/orchestration"
					},
					{
						"type": "reference",
						"target": 59581,
						"name": "StepFeatures",
						"package": "@medusajs/orchestration"
					}
				]
			}
		},
		{
			"id": 59470,
			"name": "TransactionFlow",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 216,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59471,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59472,
							"name": "modelId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 217,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59473,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 218,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58387,
								"name": "TransactionModelOptions",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 59474,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 219,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58369,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 59475,
							"name": "transactionId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 220,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59476,
							"name": "runId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 221,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59477,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 222,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 59478,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 59479,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 223,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 59480,
											"name": "parentIdempotencyKey",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 224,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 59481,
											"name": "sourcePath",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 225,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 59482,
											"name": "preventReleaseEvents",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 226,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 59483,
											"name": "parentStepIdempotencyKey",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 227,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												59479,
												59480,
												59481,
												59482,
												59483
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 222,
											"character": 15
										}
									],
									"indexSignatures": [
										{
											"id": 59484,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 228,
													"character": 8
												}
											],
											"parameters": [
												{
													"id": 59485,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									]
								}
							}
						},
						{
							"id": 59486,
							"name": "hasAsyncSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 230,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59487,
							"name": "hasFailedSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 231,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59488,
							"name": "hasSkippedOnFailureSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 232,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59489,
							"name": "hasWaitingSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 233,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59490,
							"name": "hasSkippedSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 234,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59491,
							"name": "hasRevertedSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 235,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59492,
							"name": "timedOutAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 236,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 59493,
							"name": "startedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 237,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 59494,
							"name": "cancelledAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 238,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 59495,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 239,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59509,
								"name": "TransactionState",
								"package": "@medusajs/utils"
							}
						},
						{
							"id": 59496,
							"name": "steps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 240,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 59497,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 240,
											"character": 11
										}
									],
									"indexSignatures": [
										{
											"id": 59498,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 241,
													"character": 8
												}
											],
											"parameters": [
												{
													"id": 59499,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 59117,
												"name": "TransactionStep",
												"package": "@medusajs/orchestration"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59472,
								59473,
								59474,
								59475,
								59476,
								59477,
								59486,
								59487,
								59488,
								59489,
								59490,
								59491,
								59492,
								59493,
								59494,
								59495,
								59496
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 216,
							"character": 30
						}
					]
				}
			}
		},
		{
			"id": 58902,
			"name": "StepHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
					"line": 5,
					"character": 5
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58903,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58904,
							"name": "invoke",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 6,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58365,
								"name": "WorkflowStepHandler",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 58905,
							"name": "compensate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 7,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58365,
								"name": "WorkflowStepHandler",
								"package": "@medusajs/orchestration"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58904,
								58905
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 5,
							"character": 19
						}
					]
				}
			}
		},
		{
			"id": 58606,
			"name": "LocalWorkflow",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 58614,
					"name": "container_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 10,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 58517,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 58615,
					"name": "workflowId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 11,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58616,
					"name": "flow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 12,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 58424,
						"name": "OrchestratorBuilder",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 58617,
					"name": "customOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 13,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 58387,
								"name": "TransactionModelOptions",
								"package": "@medusajs/orchestration"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 58618,
					"name": "workflow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 14,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 58886,
						"name": "WorkflowDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 58619,
					"name": "handlers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 15,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 58902,
								"name": "StepHandler",
								"package": "@medusajs/orchestration"
							}
						],
						"name": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 58620,
					"name": "medusaContext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 16,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 58546,
						"name": "Context",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 58621,
					"name": "container",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 17,
							"character": 8
						},
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 18,
							"character": 8
						}
					],
					"getSignature": {
						"id": 58622,
						"name": "container",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
								"line": 17,
								"character": 8
							}
						],
						"type": {
							"type": "reference",
							"target": 58517,
							"name": "MedusaContainer",
							"package": "@medusajs/types"
						}
					},
					"setSignature": {
						"id": 58623,
						"name": "container",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
								"line": 18,
								"character": 8
							}
						],
						"parameters": [
							{
								"id": 58624,
								"name": "modulesLoaded",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 58517,
											"name": "MedusaContainer",
											"package": "@medusajs/types"
										},
										{
											"type": "array",
											"elementType": {
												"type": "reflection",
												"declaration": {
													"id": 58625,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 58626,
															"name": "__joinerConfig",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																	"line": 90,
																	"character": 4
																}
															],
															"type": {
																"type": "reference",
																"target": 58570,
																"name": "ModuleJoinerConfig",
																"package": "@medusajs/types"
															}
														},
														{
															"id": 58627,
															"name": "__definition",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																	"line": 91,
																	"character": 4
																}
															],
															"type": {
																"type": "reference",
																"target": 58595,
																"name": "ModuleDefinition",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																58626,
																58627
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
															"line": 89,
															"character": 37
														}
													]
												}
											}
										}
									]
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 58607,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 19,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58608,
							"name": "LocalWorkflow",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58609,
									"name": "workflowId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58610,
									"name": "modulesLoaded",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 58517,
												"name": "MedusaContainer",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 58611,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 58612,
																"name": "__joinerConfig",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																		"line": 90,
																		"character": 4
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 58570,
																	"name": "ModuleJoinerConfig",
																	"package": "@medusajs/types"
																}
															},
															{
																"id": 58613,
																"name": "__definition",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																		"line": 91,
																		"character": 4
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 58595,
																	"name": "ModuleDefinition",
																	"package": "@medusajs/types"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	58612,
																	58613
																]
															}
														],
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 89,
																"character": 37
															}
														]
													}
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58606,
								"name": "LocalWorkflow",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58628,
					"name": "resolveContainer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 20,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58629,
					"name": "contextualizedMedusaModules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 21,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58630,
					"name": "commit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 22,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 58631,
							"name": "commit",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 22,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 58632,
					"name": "getFlow",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58633,
							"name": "getFlow",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58369,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58634,
					"name": "registerEventCallbacks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 24,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58635,
					"name": "run",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58636,
							"name": "run",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 25,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58637,
									"name": "uniqueTransactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58638,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 58639,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 58640,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58906,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58641,
									"name": "flowMetadata",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58642,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 58643,
													"name": "eventGroupId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 223,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 58644,
													"name": "parentIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 224,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 58645,
													"name": "sourcePath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 225,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 58646,
													"name": "preventReleaseEvents",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 226,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 58647,
													"name": "parentStepIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 227,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														58643,
														58644,
														58645,
														58646,
														58647
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 222,
													"character": 15
												}
											],
											"indexSignatures": [
												{
													"id": 58648,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 228,
															"character": 8
														}
													],
													"parameters": [
														{
															"id": 58649,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 58989,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58650,
					"name": "getRunningTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58651,
							"name": "getRunningTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58652,
									"name": "uniqueTransactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58653,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 58989,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58654,
					"name": "cancel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58655,
							"name": "cancel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 27,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58656,
									"name": "transactionOrTransactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 58989,
												"name": "DistributedTransaction",
												"package": "@medusajs/orchestration"
											}
										]
									}
								},
								{
									"id": 58657,
									"name": "_",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 58658,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 58659,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58906,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 58989,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58660,
					"name": "registerStepSuccess",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58661,
							"name": "registerStepSuccess",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58662,
									"name": "idempotencyKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58663,
									"name": "response",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 58664,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 58665,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58906,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 58989,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58666,
					"name": "registerStepFailure",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58667,
							"name": "registerStepFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 30,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58668,
									"name": "idempotencyKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58669,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 58670,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58546,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 58671,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58906,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 58989,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58672,
					"name": "setOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58673,
							"name": "setOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 31,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58674,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 58387,
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 58675,
					"name": "addAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 32,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58676,
							"name": "addAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 32,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58677,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58678,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58902,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58679,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 58369,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58424,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58680,
					"name": "replaceAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58681,
							"name": "replaceAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58682,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58683,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58684,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58902,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58685,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 58369,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58424,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58686,
					"name": "insertActionBefore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 34,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58687,
							"name": "insertActionBefore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 34,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58688,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58689,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58690,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58902,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58691,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 58369,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58424,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58692,
					"name": "insertActionAfter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 35,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58693,
							"name": "insertActionAfter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 35,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58694,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58695,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58696,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58902,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58697,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 58369,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58424,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58698,
					"name": "appendAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 36,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58699,
							"name": "appendAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 36,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58700,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58701,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58702,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58902,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58703,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 58369,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58424,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58704,
					"name": "moveAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 37,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58705,
							"name": "moveAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 37,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58706,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58707,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58424,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58708,
					"name": "moveAndMergeNextAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58709,
							"name": "moveAndMergeNextAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 38,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58710,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58711,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58424,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58712,
					"name": "mergeActions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 39,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58713,
							"name": "mergeActions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 39,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58714,
									"name": "where",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58715,
									"name": "actions",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58424,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58716,
					"name": "deleteAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 40,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58717,
							"name": "deleteAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 40,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58718,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58719,
									"name": "parentSteps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58424,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58720,
					"name": "pruneAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58721,
							"name": "pruneAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 41,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58722,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58424,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58723,
					"name": "assertHandler",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 42,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 58724,
							"name": "assertHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 42,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 58725,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58902,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58726,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 58727,
					"name": "onLoad",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 43,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						58607
					]
				},
				{
					"title": "Properties",
					"children": [
						58614,
						58615,
						58616,
						58617,
						58618,
						58619,
						58620,
						58628,
						58629,
						58634,
						58727
					]
				},
				{
					"title": "Accessors",
					"children": [
						58621
					]
				},
				{
					"title": "Methods",
					"children": [
						58630,
						58632,
						58635,
						58650,
						58654,
						58660,
						58666,
						58672,
						58675,
						58680,
						58686,
						58692,
						58698,
						58704,
						58708,
						58712,
						58716,
						58720,
						58723
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
					"line": 9,
					"character": 21
				}
			]
		},
		{
			"id": 58886,
			"name": "WorkflowDefinition",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 58887,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58888,
					"name": "handler",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58889,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 5,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 58890,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 5,
											"character": 13
										}
									],
									"parameters": [
										{
											"id": 58891,
											"name": "container",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 58517,
												"name": "MedusaContainer",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 58892,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 58546,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 59409,
										"name": "TransactionStepHandler",
										"package": "@medusajs/orchestration"
									}
								}
							]
						}
					}
				},
				{
					"id": 58893,
					"name": "orchestrator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 59181,
						"name": "TransactionOrchestrator",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 58894,
					"name": "flow_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 58369,
						"name": "TransactionStepsDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 58895,
					"name": "handlers_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 8,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 58896,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 58897,
											"name": "invoke",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 9,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 58365,
												"name": "WorkflowStepHandler",
												"package": "@medusajs/orchestration"
											}
										},
										{
											"id": 58898,
											"name": "compensate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 10,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 58365,
												"name": "WorkflowStepHandler",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												58897,
												58898
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 8,
											"character": 27
										}
									]
								}
							}
						],
						"name": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 58899,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 58387,
						"name": "TransactionModelOptions",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 58900,
					"name": "requiredModules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Set",
						"package": "typescript"
					}
				},
				{
					"id": 58901,
					"name": "optionalModules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Set",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						58887,
						58888,
						58893,
						58894,
						58895,
						58899,
						58900,
						58901
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 58513,
			"name": "WorkflowHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 16,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
					"qualifiedName": "Map"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 58514,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58515,
									"name": "invoke",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 17,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 58365,
										"name": "WorkflowStepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58516,
									"name": "compensate",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 18,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 58365,
										"name": "WorkflowStepHandler",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58515,
										58516
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 16,
									"character": 42
								}
							]
						}
					}
				],
				"name": "Map",
				"package": "typescript"
			}
		},
		{
			"id": 58767,
			"name": "WorkflowStepHandlerArguments",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 20,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58768,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58769,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58517,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 58770,
							"name": "payload",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 22,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 58771,
							"name": "invoke",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58772,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 23,
											"character": 12
										}
									],
									"indexSignatures": [
										{
											"id": 58773,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 24,
													"character": 8
												}
											],
											"parameters": [
												{
													"id": 58774,
													"name": "actions",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									]
								}
							}
						},
						{
							"id": 58775,
							"name": "compensate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58776,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 26,
											"character": 16
										}
									],
									"indexSignatures": [
										{
											"id": 58777,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"parameters": [
												{
													"id": 58778,
													"name": "actions",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									]
								}
							}
						},
						{
							"id": 58779,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58538,
								"name": "TransactionMetadata",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 58780,
							"name": "transaction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 30,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58989,
								"name": "DistributedTransactionType",
								"package": "@medusajs/orchestration",
								"qualifiedName": "DistributedTransaction"
							}
						},
						{
							"id": 58781,
							"name": "step",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 31,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59117,
								"name": "TransactionStep",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 58782,
							"name": "orchestrator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 32,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59181,
								"name": "TransactionOrchestrator",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 58783,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58546,
								"name": "Context",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58769,
								58770,
								58771,
								58775,
								58779,
								58780,
								58781,
								58782,
								58783
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 20,
							"character": 43
						}
					]
				}
			}
		},
		{
			"id": 58365,
			"name": "WorkflowStepHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 35,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58366,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 35,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 58367,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 58368,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58767,
										"name": "WorkflowStepHandlerArguments",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 58820,
			"name": "ModuleImplementations",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The following interface acts as a bucket that other modules or the\nutils package can fill using declaration merging"
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
					"line": 6,
					"character": 17
				}
			]
		},
		{
			"id": 58517,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
					"line": 12,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 58537,
					"name": "Cradle",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"default": {
						"type": "reference",
						"target": 58820,
						"name": "ModuleImplementations",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
									"qualifiedName": "AwilixContainer"
								},
								"name": "AwilixContainer",
								"package": "awilix"
							},
							{
								"type": "literal",
								"value": "resolve"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 58518,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58519,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
											"line": 13,
											"character": 4
										},
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
											"line": 14,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 58520,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
													"line": 13,
													"character": 4
												}
											],
											"typeParameters": [
												{
													"id": 58521,
													"name": "K",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 58522,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 58521,
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 58523,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 58521,
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 58537,
													"name": "Cradle",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										},
										{
											"id": 58524,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
													"line": 14,
													"character": 4
												}
											],
											"typeParameters": [
												{
													"id": 58525,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {}
												}
											],
											"parameters": [
												{
													"id": 58526,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 58527,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 58525,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								},
								{
									"id": 58528,
									"name": "registerAdd",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
											"line": 18,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58529,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
													"line": 18,
													"character": 17
												}
											],
											"signatures": [
												{
													"id": 58530,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameters": [
														{
															"id": 58533,
															"name": "T",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 58531,
															"name": "name",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 58532,
															"name": "registration",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 58533,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 58517,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													}
												}
											]
										}
									}
								},
								{
									"id": 58534,
									"name": "createScope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
											"line": 22,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58535,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
													"line": 22,
													"character": 17
												}
											],
											"signatures": [
												{
													"id": 58536,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 58517,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58528,
										58534
									]
								},
								{
									"title": "Methods",
									"children": [
										58519
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
									"line": 12,
									"character": 112
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 59586,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
					"line": 13,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 59587,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59588,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the event's group. Grouped events are useful when you have distributed transactions\nwhere you need to explicitly group, release and clear events upon lifecycle events of a transaction.\n\nWhen set, you must release the grouped events using the Event Module's "
											},
											{
												"kind": "code",
												"text": "`releaseGroupedEvents`"
											},
											{
												"kind": "text",
												"text": " method to emit the events."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
											"line": 20,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59588
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 13,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 59547,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
					"line": 22,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 59552,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59548,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59549,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The event's name."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nuser.created\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59550,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional meadata to pass with the event."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59586,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 59551,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data payload that subscribers receive. For example, the ID or IDs of the created user. (e.g. { id: \"123\" } or { ids: [\"123\", \"456\"] })"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 37,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59552,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59549,
								59550,
								59551
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
							"line": 22,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 59349,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of an event to emit."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
					"line": 42,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 59352,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 59547,
						"typeArguments": [
							{
								"type": "reference",
								"target": 59352,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Event",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 59350,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59351,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
											"line": 43,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59351
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 42,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 59360,
			"name": "RawMessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
					"line": 45,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 59369,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59361,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59362,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 46,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59363,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 47,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59369,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 59364,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 48,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59365,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59366,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 50,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59367,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 51,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 58546,
										"name": "Context",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "eventGroupId"
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						},
						{
							"id": 59368,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59362,
								59363,
								59364,
								59365,
								59366,
								59367,
								59368
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
							"line": 45,
							"character": 44
						}
					]
				}
			}
		},
		{
			"id": 59375,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
					"line": 1,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59376,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59377,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 2,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59378,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 3,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59379,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 4,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59380,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 5,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59381,
							"name": "entity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 6,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59382,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59383,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59384,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59377,
								59378,
								59379,
								59380,
								59381,
								59382,
								59383,
								59384
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 1,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 59370,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 59371,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 21,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 59372,
					"name": "entity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 22,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 59373,
					"name": "filterable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 59374,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						59371,
						59372,
						59373,
						59374
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
					"line": 20,
					"character": 17
				}
			]
		},
		{
			"id": 58838,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 58839,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58840,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 59370,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 59370,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 58841,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 58842,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 58843,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
															"line": 39,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 58844,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
															"line": 40,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														58843,
														58844
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
													"line": 38,
													"character": 41
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 58845,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 58846,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 59375,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 58847,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 58848,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 58849,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
												"line": 45,
												"character": 8
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 58850,
										"name": "entity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
												"line": 46,
												"character": 8
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 58851,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
												"line": 47,
												"character": 8
											}
										],
										"type": {
											"type": "reference",
											"target": 59375,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											58849,
											58850,
											58851
										]
									}
								],
								"sources": [
									{
										"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
										"line": 44,
										"character": 14
									}
								]
							}
						}
					}
				},
				{
					"id": 58852,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 52,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						58839,
						58840,
						58841,
						58845,
						58846,
						58847,
						58852
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
					"line": 29,
					"character": 17
				}
			]
		},
		{
			"id": 59589,
			"name": "Logger",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 59590,
					"name": "panic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59591,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 2,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 59592,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 2,
											"character": 11
										}
									],
									"parameters": [
										{
											"id": 59593,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 59594,
					"name": "shouldLog",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59595,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 3,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 59596,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 3,
											"character": 15
										}
									],
									"parameters": [
										{
											"id": 59597,
											"name": "level",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 59598,
					"name": "setLogLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59599,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 4,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 59600,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 4,
											"character": 17
										}
									],
									"parameters": [
										{
											"id": 59601,
											"name": "level",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 59602,
					"name": "unsetLogLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59603,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 5,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 59604,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 5,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 59605,
					"name": "activity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59606,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 6,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 59607,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 6,
											"character": 14
										}
									],
									"parameters": [
										{
											"id": 59608,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 59609,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 59610,
					"name": "progress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59611,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 7,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 59612,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 7,
											"character": 14
										}
									],
									"parameters": [
										{
											"id": 59613,
											"name": "activityId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 59614,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 59615,
					"name": "error",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 8,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59616,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 8,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 59617,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 8,
											"character": 11
										}
									],
									"parameters": [
										{
											"id": 59618,
											"name": "messageOrError",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 59619,
											"name": "error",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 59620,
					"name": "failure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59621,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 9,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 59622,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 9,
											"character": 13
										}
									],
									"parameters": [
										{
											"id": 59623,
											"name": "activityId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 59624,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 59625,
					"name": "success",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59626,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 10,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 59627,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 10,
											"character": 13
										}
									],
									"parameters": [
										{
											"id": 59628,
											"name": "activityId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 59629,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 59630,
					"name": "debug",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59631,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 11,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 59632,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 11,
											"character": 11
										}
									],
									"parameters": [
										{
											"id": 59633,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 59634,
					"name": "info",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59635,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 12,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 59636,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 12,
											"character": 10
										}
									],
									"parameters": [
										{
											"id": 59637,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 59638,
					"name": "warn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59639,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 13,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 59640,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 13,
											"character": 10
										}
									],
									"parameters": [
										{
											"id": 59641,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 59642,
					"name": "log",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59643,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 14,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 59644,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 14,
											"character": 9
										}
									],
									"parameters": [
										{
											"id": 59645,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						59590,
						59594,
						59598,
						59602,
						59605,
						59610,
						59615,
						59620,
						59625,
						59630,
						59634,
						59638,
						59642
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
					"line": 1,
					"character": 17
				}
			]
		},
		{
			"id": 59565,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 8,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 59571,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59566,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 8,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 59567,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 59570,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 59571,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 59568,
											"name": "__type",
											"variant": "declaration",
											"kind": 512,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 8,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 59569,
													"name": "__type",
													"variant": "signature",
													"kind": 16384,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 59571,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 59385,
			"name": "CustomModuleDefinition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 17,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59386,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59387,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59388,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59389,
							"name": "isQueryable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 20,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59390,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59387,
								59388,
								59389,
								59390
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 17,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 58864,
			"name": "InternalModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 23,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58865,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58866,
							"name": "scope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 24,
									"character": 4
								}
							],
							"type": {
								"type": "literal",
								"value": "internal"
							}
						},
						{
							"id": 58867,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 58868,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59385,
								"name": "CustomModuleDefinition",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 58869,
							"name": "resolve",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 27,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 59391,
										"name": "ModuleExports",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 58870,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 28,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 58871,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 32,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58872,
							"name": "main",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the module is the main module for the key when multiple ones are registered"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 36,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58873,
							"name": "worker_mode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 37,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "shared"
									},
									{
										"type": "literal",
										"value": "worker"
									},
									{
										"type": "literal",
										"value": "server"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58866,
								58867,
								58868,
								58869,
								58870,
								58871,
								58872,
								58873
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 23,
							"character": 40
						}
					]
				}
			}
		},
		{
			"id": 58874,
			"name": "ExternalModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 39,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58875,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58876,
							"name": "scope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 40,
									"character": 4
								}
							],
							"type": {
								"type": "literal",
								"value": "external"
							}
						},
						{
							"id": 58877,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 41,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59385,
								"name": "CustomModuleDefinition",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 58878,
							"name": "server",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58879,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 58880,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 43,
													"character": 8
												}
											],
											"type": {
												"type": "literal",
												"value": "http"
											}
										},
										{
											"id": 58881,
											"name": "url",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 44,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 58882,
											"name": "keepAlive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 45,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												58880,
												58881,
												58882
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 42,
											"character": 13
										}
									]
								}
							}
						},
						{
							"id": 58883,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 47,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 58884,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 51,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58885,
							"name": "main",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the module is the main module for the key when multiple ones are registered"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 55,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58876,
								58877,
								58878,
								58883,
								58884,
								58885
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 39,
							"character": 40
						}
					]
				}
			}
		},
		{
			"id": 58595,
			"name": "ModuleDefinition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 65,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58596,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58597,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 66,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58598,
							"name": "defaultPackage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 67,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": false
									}
								]
							}
						},
						{
							"id": 58599,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58600,
							"name": "resolvePath",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 69,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58601,
							"name": "isRequired",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 70,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58602,
							"name": "isQueryable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 71,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58603,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 72,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 58604,
							"name": "__passSharedContainer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "only used in exceptional cases - relying on the shared contrainer breaks encapsulation"
									}
								],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58605,
							"name": "defaultModuleDeclaration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 75,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 58864,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 58874,
										"name": "ExternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58597,
								58598,
								58599,
								58600,
								58601,
								58602,
								58603,
								58604,
								58605
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 65,
							"character": 31
						}
					]
				}
			}
		},
		{
			"id": 59525,
			"name": "LoadedModule",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 89,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "intrinsic",
						"name": "unknown"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 59526,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59527,
									"name": "__joinerConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 90,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 58570,
										"name": "ModuleJoinerConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 59528,
									"name": "__definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 91,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 58595,
										"name": "ModuleDefinition",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59527,
										59528
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 89,
									"character": 37
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 59558,
			"name": "LoaderOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 93,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 59564,
					"name": "TOptions",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59559,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59560,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 94,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58517,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 59561,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 95,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59564,
								"name": "TOptions",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 59562,
							"name": "logger",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 96,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59589,
								"name": "Logger",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 59563,
							"name": "dataLoaderOnly",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 97,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59560,
								59561,
								59562,
								59563
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 93,
							"character": 64
						}
					]
				}
			}
		},
		{
			"id": 59553,
			"name": "ModuleLoaderFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 99,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59554,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 99,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 59555,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 59556,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 59558,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "LoaderOptions",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 59557,
									"name": "moduleDeclaration",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58864,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 58858,
			"name": "LinkModulesExtraFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 104,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 58859,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58860,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 105,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "date"
											},
											{
												"type": "literal",
												"value": "time"
											},
											{
												"type": "literal",
												"value": "datetime"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "blob"
											},
											{
												"type": "literal",
												"value": "uint8array"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "enumArray"
											},
											{
												"type": "literal",
												"value": "enum"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "integer"
											},
											{
												"type": "literal",
												"value": "smallint"
											},
											{
												"type": "literal",
												"value": "tinyint"
											},
											{
												"type": "literal",
												"value": "mediumint"
											},
											{
												"type": "literal",
												"value": "float"
											},
											{
												"type": "literal",
												"value": "double"
											},
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "decimal"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "uuid"
											},
											{
												"type": "literal",
												"value": "text"
											}
										]
									}
								},
								{
									"id": 58861,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 106,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58862,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 107,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 58863,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mikro-orm options for the column"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 111,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58860,
										58861,
										58862,
										58863
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 104,
									"character": 52
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 58570,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 125,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 58838,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 58571,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58572,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 129,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58573,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 130,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 58853,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 58574,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 131,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 58575,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 58576,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 132,
																"character": 8
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 58577,
														"name": "entity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 133,
																"character": 8
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 58578,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 134,
																"character": 8
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 58579,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 58580,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																								"line": 135,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 58581,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																								"line": 136,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 58582,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																								"line": 137,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							58580,
																							58581,
																							58582
																						]
																					}
																				],
																				"sources": [
																					{
																						"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																						"line": 134,
																						"character": 45
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 58583,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 139,
																"character": 8
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Omit"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 58853,
																	"name": "ModuleJoinerRelationship",
																	"package": "@medusajs/types"
																},
																{
																	"type": "literal",
																	"value": "hasMany"
																}
															],
															"name": "Omit",
															"package": "typescript"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															58576,
															58577,
															58578,
															58583
														]
													}
												],
												"sources": [
													{
														"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
														"line": 131,
														"character": 14
													}
												]
											}
										}
									}
								},
								{
									"id": 58584,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 141,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58585,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 142,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 58586,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 146,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 58587,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 150,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 58588,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 154,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 58589,
									"name": "extraDataFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 159,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 58590,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 160,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58591,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 58592,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
															"line": 164,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 58593,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
															"line": 168,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 58594,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
															"line": 169,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 58858,
														"name": "LinkModulesExtraFields",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														58592,
														58593,
														58594
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 160,
													"character": 21
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58572,
										58573,
										58574,
										58584,
										58585,
										58586,
										58587,
										58588,
										58589,
										58590
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 125,
									"character": 122
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 58853,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 172,
					"character": 20
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 59375,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 58854,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58855,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 176,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 58856,
									"name": "filterable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The fields to be filterable by the Index module using query.index"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 180,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 58857,
									"name": "hasMany",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Allow multiple relationships to exist for this\nentity"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 185,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58855,
										58856,
										58857
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 172,
									"character": 68
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 59391,
			"name": "ModuleExports",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 187,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 59408,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": 59565,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Constructor",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59392,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59393,
							"name": "service",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 188,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 59408,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 59394,
							"name": "loaders",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 189,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 59553,
									"name": "ModuleLoaderFunction",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 59395,
							"name": "runMigrations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 190,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 59396,
									"name": "runMigrations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 190,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 59397,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 59558,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 59398,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 58864,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 59399,
							"name": "revertMigration",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 191,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 59400,
									"name": "revertMigration",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 191,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 59401,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 59558,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 59402,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 58864,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 59403,
							"name": "generateMigration",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 192,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 59404,
									"name": "generateMigration",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 192,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 59405,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 59558,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 59406,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 58864,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 59407,
							"name": "discoveryPath",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Explicitly set the the true location of the module resources.\nCan be used to re-export the module from a different location and specify its original location."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 197,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59393,
								59394,
								59407
							]
						},
						{
							"title": "Methods",
							"children": [
								59395,
								59399,
								59403
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 187,
							"character": 50
						}
					]
				}
			}
		},
		{
			"id": 59353,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 59354,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 59355,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59356,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 5,
									"character": 13
								}
							],
							"indexSignatures": [
								{
									"id": 59357,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
											"line": 6,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 59358,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 59359,
					"name": "internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "will prevent the info log to be displayed about those events"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						59354,
						59355,
						59359
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 58824,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 58825,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58826,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58827,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 59349,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 59349,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 58828,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58829,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58830,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 59353,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 59349,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58831,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58832,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 58833,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58834,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"typeParameters": [
								{
									"id": 58835,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 58836,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 59360,
												"typeArguments": [
													{
														"type": "reference",
														"target": 58835,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 59360,
													"typeArguments": [
														{
															"type": "reference",
															"target": 58835,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 58837,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						58825,
						58828,
						58831,
						58833
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
					"line": 14,
					"character": 17
				}
			]
		},
		{
			"id": 58546,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 58547,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 58548,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 58560,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 58549,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 58560,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 58550,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 37,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58551,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 58552,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 45,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58553,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 49,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58554,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 53,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 58824,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 58555,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 57,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58556,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 61,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58557,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the parent workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58558,
					"name": "preventReleaseEvents",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "preventReleaseEvents"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 69,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 58559,
					"name": "isCancelling",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether the current workflow execution is being cancelled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 73,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						58547,
						58548,
						58549,
						58550,
						58551,
						58552,
						58553,
						58554,
						58555,
						58556,
						58557,
						58558,
						58559
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
					"line": 24,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 58560,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 58406,
			"name": "SymbolWorkflowHook",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/symbol.d.ts",
					"line": 5,
					"character": 21
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 58821,
			"name": "TransactionHandlerType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 58822,
					"name": "INVOKE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "invoke"
					}
				},
				{
					"id": 58823,
					"name": "COMPENSATE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "compensate"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						58822,
						58823
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
					"line": 1,
					"character": 20
				}
			]
		},
		{
			"id": 59509,
			"name": "TransactionState",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 59510,
					"name": "NOT_STARTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "not_started"
					}
				},
				{
					"id": 59511,
					"name": "INVOKING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "invoking"
					}
				},
				{
					"id": 59512,
					"name": "WAITING_TO_COMPENSATE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 8,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "waiting_to_compensate"
					}
				},
				{
					"id": 59513,
					"name": "COMPENSATING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "compensating"
					}
				},
				{
					"id": 59514,
					"name": "DONE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "done"
					}
				},
				{
					"id": 59515,
					"name": "REVERTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "reverted"
					}
				},
				{
					"id": 59516,
					"name": "FAILED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "failed"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						59510,
						59511,
						59512,
						59513,
						59514,
						59515,
						59516
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
					"line": 5,
					"character": 20
				}
			]
		},
		{
			"id": 59529,
			"name": "TransactionStepState",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 59530,
					"name": "NOT_STARTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "not_started"
					}
				},
				{
					"id": 59531,
					"name": "INVOKING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "invoking"
					}
				},
				{
					"id": 59532,
					"name": "COMPENSATING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "compensating"
					}
				},
				{
					"id": 59533,
					"name": "DONE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "done"
					}
				},
				{
					"id": 59534,
					"name": "REVERTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 19,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "reverted"
					}
				},
				{
					"id": 59535,
					"name": "FAILED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 20,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "failed"
					}
				},
				{
					"id": 59536,
					"name": "DORMANT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 21,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "dormant"
					}
				},
				{
					"id": 59537,
					"name": "SKIPPED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 22,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "skipped"
					}
				},
				{
					"id": 59538,
					"name": "SKIPPED_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "skipped_failure"
					}
				},
				{
					"id": 59539,
					"name": "TIMEOUT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 24,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "timeout"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						59530,
						59531,
						59532,
						59533,
						59534,
						59535,
						59536,
						59537,
						59538,
						59539
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
					"line": 14,
					"character": 20
				}
			]
		},
		{
			"id": 59540,
			"name": "TransactionStepStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 59541,
					"name": "IDLE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "idle"
					}
				},
				{
					"id": 59542,
					"name": "OK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ok"
					}
				},
				{
					"id": 59543,
					"name": "WAITING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "waiting_response"
					}
				},
				{
					"id": 59544,
					"name": "TEMPORARY_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "temp_failure"
					}
				},
				{
					"id": 59545,
					"name": "PERMANENT_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "permanent_failure"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						59541,
						59542,
						59543,
						59544,
						59545
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
					"line": 26,
					"character": 20
				}
			]
		},
		{
			"id": 59517,
			"name": "BaseFlowRunOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 9,
					"character": 5
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59518,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59519,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 10,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 58546,
								"name": "Context",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 59520,
							"name": "resultFrom",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 11,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Symbol"
										},
										"name": "Symbol",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 59521,
							"name": "throwOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 12,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59522,
							"name": "logOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 13,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59523,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 14,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 58906,
								"name": "DistributedTransactionEvents",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 59524,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 59525,
											"name": "LoadedModule",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 58517,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59519,
								59520,
								59521,
								59522,
								59523,
								59524
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
							"line": 9,
							"character": 26
						}
					]
				}
			}
		},
		{
			"id": 59087,
			"name": "FlowRunOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 18,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 59090,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 59517,
						"name": "BaseFlowRunOptions",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 59088,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59089,
									"name": "input",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 19,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 59090,
										"name": "TData",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59089
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 18,
									"character": 67
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 59091,
			"name": "FlowRegisterStepSuccessOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 22,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 59095,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 59517,
						"name": "BaseFlowRunOptions",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 59092,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59093,
									"name": "idempotencyKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 24,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59094,
									"name": "response",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 25,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 59095,
										"name": "TData",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59093,
										59094
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 23,
									"character": 23
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 59096,
			"name": "FlowRegisterStepFailureOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 28,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 59100,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 59517,
						"name": "BaseFlowRunOptions",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 59097,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 59098,
									"name": "idempotencyKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 30,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 59099,
									"name": "response",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 31,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 59100,
										"name": "TData",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										59098,
										59099
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 29,
									"character": 23
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 59101,
			"name": "FlowCancelOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 34,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59102,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59103,
							"name": "transaction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 35,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 58989,
								"name": "DistributedTransactionType",
								"package": "@medusajs/orchestration",
								"qualifiedName": "DistributedTransaction"
							}
						},
						{
							"id": 59104,
							"name": "transactionId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 36,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 59105,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 37,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 58546,
								"name": "Context",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 59106,
							"name": "throwOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 38,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59107,
							"name": "logOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 39,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 59108,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 40,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 58906,
								"name": "DistributedTransactionEvents",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 59109,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 41,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 59525,
											"name": "LoadedModule",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 58517,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59103,
								59104,
								59105,
								59106,
								59107,
								59108,
								59109
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
							"line": 34,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 59081,
			"name": "WorkflowResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of a workflow's execution."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 47,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 59086,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59082,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 59083,
							"name": "errors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Any errors that occured in the workflow."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 51,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 59500,
									"name": "TransactionStepError",
									"package": "@medusajs/orchestration"
								}
							}
						},
						{
							"id": 59084,
							"name": "transaction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The transaction details of the workflow's execution."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 55,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 58989,
								"name": "DistributedTransactionType",
								"package": "@medusajs/orchestration",
								"qualifiedName": "DistributedTransaction"
							}
						},
						{
							"id": 59085,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The result returned by the workflow."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 59086,
								"name": "TResult",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								59083,
								59084,
								59085
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
							"line": 47,
							"character": 48
						}
					]
				}
			}
		},
		{
			"id": 58728,
			"name": "ExportedWorkflow",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 62,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 58746,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 58747,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 58748,
					"name": "TDataOverride",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "undefined"
					}
				},
				{
					"id": 58749,
					"name": "TResultOverride",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "undefined"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58729,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58730,
							"name": "run",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 68,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58731,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 68,
											"character": 7
										}
									],
									"signatures": [
										{
											"id": 58732,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58733,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 59087,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 58748,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 58746,
																	"name": "TData",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 58748,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "FlowRunOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 59081,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 58749,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 58747,
																	"name": "TResult",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 58749,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 58734,
							"name": "registerStepSuccess",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 77,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58735,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 77,
											"character": 23
										}
									],
									"signatures": [
										{
											"id": 58736,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58737,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 59091,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 58748,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 58746,
																	"name": "TData",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 58748,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "FlowRegisterStepSuccessOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 59081,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 58749,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 58747,
																	"name": "TResult",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 58749,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 58738,
							"name": "registerStepFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 86,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58739,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 86,
											"character": 23
										}
									],
									"signatures": [
										{
											"id": 58740,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58741,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 59096,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 58748,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 58746,
																	"name": "TData",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 58748,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "FlowRegisterStepFailureOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 59081,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 58749,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 58747,
																	"name": "TResult",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 58749,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 58742,
							"name": "cancel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 95,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58743,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 95,
											"character": 10
										}
									],
									"signatures": [
										{
											"id": 58744,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58745,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 59101,
														"name": "FlowCancelOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 59081,
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58730,
								58734,
								58738,
								58742
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
							"line": 67,
							"character": 4
						}
					]
				}
			}
		},
		{
			"id": 58114,
			"name": "Hook",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Representation of a hook definition."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
					"line": 18,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L18"
				}
			],
			"typeParameters": [
				{
					"id": 58122,
					"name": "Name",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58123,
					"name": "Input",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 58124,
					"name": "Output",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58115,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58116,
							"name": "__type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L19"
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": 58406,
									"name": "OrchestrationUtils.SymbolWorkflowHook",
									"package": "@medusajs/utils",
									"qualifiedName": "SymbolWorkflowHook"
								}
							}
						},
						{
							"id": 58117,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L20"
								}
							],
							"type": {
								"type": "reference",
								"target": 58122,
								"name": "Name",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 58118,
							"name": "getResult",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L25"
								}
							],
							"signatures": [
								{
									"id": 58119,
									"name": "getResult",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the result of the hook"
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
											"line": 25,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L25"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 58124,
												"name": "Output",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										]
									}
								}
							]
						},
						{
							"id": 58120,
							"name": " output",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "By prefixing a key with a space, we remove it from the\nintellisense of TypeScript. This is needed because\ninput is not set at runtime. It is a type-only\nproperty to infer input data type of a hook"
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L33"
								}
							],
							"type": {
								"type": "reference",
								"target": 58124,
								"name": "Output",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 58121,
							"name": " input",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L34"
								}
							],
							"type": {
								"type": "reference",
								"target": 58123,
								"name": "Input",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58116,
								58117,
								58120,
								58121
							]
						},
						{
							"title": "Methods",
							"children": [
								58118
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
							"line": 18,
							"character": 55,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L18"
						}
					]
				}
			}
		},
		{
			"id": 58104,
			"name": "createHook",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
					"line": 72,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L72"
				}
			],
			"signatures": [
				{
					"id": 58105,
					"name": "createHook",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Expose a hook in your workflow where you can inject custom functionality as a step function.\n\nA handler hook can later be registered to consume the hook and perform custom functionality.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/workflow-hooks)."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A workflow hook."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createStep,\n  createHook,\n  createWorkflow,\n  WorkflowResponse,\n} from \"@medusajs/framework/workflows-sdk\"\nimport { createProductStep } from \"./steps/create-product\"\n\nexport const myWorkflow = createWorkflow(\n  \"my-workflow\",\n  function (input) {\n    const product = createProductStep(input)\n    const productCreatedHook = createHook(\n      \"productCreated\",\n      { productId: product.id }\n    )\n\n    return new WorkflowResponse(product, {\n      hooks: [productCreatedHook],\n    })\n  }\n)\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
							"line": 72,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L72"
						}
					],
					"typeParameters": [
						{
							"id": 58106,
							"name": "Name",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58107,
							"name": "TInvokeInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 58108,
							"name": "TInvokeOutput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 58109,
							"name": "name",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The hook's name. This is used when the hook handler is registered to consume the workflow."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 58106,
								"name": "Name",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 58110,
							"name": "hookInput",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The input to pass to the hook handler."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 58107,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 58111,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58112,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 58113,
											"name": "resultValidator",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
													"line": 76,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L76"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../node_modules/zod/v3/types.d.cts",
													"qualifiedName": "ZodType"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 58108,
														"name": "TInvokeOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/zod/v3/types.d.cts",
															"qualifiedName": "ZodTypeDef"
														},
														"name": "ZodTypeDef",
														"package": "zod"
													},
													{
														"type": "reference",
														"target": 58108,
														"name": "TInvokeOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "ZodType",
												"package": "zod"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												58113
											]
										}
									],
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
											"line": 75,
											"character": 11,
											"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L75"
										}
									]
								}
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reference",
						"target": 58114,
						"typeArguments": [
							{
								"type": "reference",
								"target": 58106,
								"name": "Name",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 58107,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 58108,
								"name": "TInvokeOutput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "Hook",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 58015,
			"name": "InvokeFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The type of invocation function passed to a step."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 29,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L29"
				}
			],
			"typeParameters": [
				{
					"id": 58020,
					"name": "TInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the input that the function expects."
							}
						]
					}
				},
				{
					"id": 58021,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the output that the function returns."
							}
						]
					}
				},
				{
					"id": 58022,
					"name": "TCompensateInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the input that the compensation function expects."
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58016,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 29,
							"character": 58,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L29"
						}
					],
					"signatures": [
						{
							"id": 58017,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The expected output based on the type parameter "
											},
											{
												"kind": "code",
												"text": "`TOutput`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 58018,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58020,
										"name": "TInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 58019,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58288,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"target": 58058,
										"typeArguments": [
											{
												"type": "reference",
												"target": 58021,
												"name": "TOutput",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 58022,
													"name": "TCompensateInput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "undefined"
												},
												"trueType": {
													"type": "reference",
													"target": 58021,
													"name": "TOutput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												},
												"falseType": {
													"type": "reference",
													"target": 58022,
													"name": "TCompensateInput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "StepResponse",
										"package": "@medusajs/workflows-sdk"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": 58058,
														"typeArguments": [
															{
																"type": "reference",
																"target": 58021,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 58022,
																	"name": "TCompensateInput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 58021,
																	"name": "TOutput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 58022,
																	"name": "TCompensateInput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "StepResponse",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 58023,
			"name": "CompensateFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The type of compensation function passed to a step."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 57,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L57"
				}
			],
			"typeParameters": [
				{
					"id": 58028,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the argument passed to the compensation function. If not specified, then it will be the same type as the invocation function's output."
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58024,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 57,
							"character": 30,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L57"
						}
					],
					"signatures": [
						{
							"id": 58025,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "There's no expected type to be returned by the compensation function."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 58026,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 58028,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 58027,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58288,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "unknown"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 58029,
			"name": "LocalStepConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 68,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L68"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 58030,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58031,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
											"line": 68,
											"character": 32,
											"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L68"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58031
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
									"line": 68,
									"character": 30,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L68"
								}
							]
						}
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 58369,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "next"
									},
									{
										"type": "literal",
										"value": "uuid"
									},
									{
										"type": "literal",
										"value": "action"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 58032,
			"name": "ApplyStepOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 58033,
					"name": "stepName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 81,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L81"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58034,
					"name": "stepConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 82,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L82"
						}
					],
					"type": {
						"type": "reference",
						"target": 58369,
						"name": "TransactionStepsDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 58035,
					"name": "input",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 83,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L83"
						}
					],
					"type": {
						"type": "reference",
						"target": 58038,
						"name": "TStepInputs",
						"package": "@medusajs/workflows-sdk",
						"qualifiedName": "ApplyStepOptions.TStepInputs",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 58036,
					"name": "invokeFn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 84,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L84"
						}
					],
					"type": {
						"type": "reference",
						"target": 58015,
						"typeArguments": [
							{
								"type": "reference",
								"target": 58039,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeInput",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 58040,
								"name": "TInvokeResultOutput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeResultOutput",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 58041,
								"name": "TInvokeResultCompensateInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeResultCompensateInput",
								"refersToTypeParameter": true
							}
						],
						"name": "InvokeFn",
						"package": "@medusajs/workflows-sdk"
					}
				},
				{
					"id": 58037,
					"name": "compensateFn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 89,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L89"
						}
					],
					"type": {
						"type": "reference",
						"target": 58023,
						"typeArguments": [
							{
								"type": "reference",
								"target": 58041,
								"name": "TInvokeResultCompensateInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeResultCompensateInput",
								"refersToTypeParameter": true
							}
						],
						"name": "CompensateFn",
						"package": "@medusajs/workflows-sdk"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						58033,
						58034,
						58035,
						58036,
						58037
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 73,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L73"
				}
			],
			"typeParameters": [
				{
					"id": 58038,
					"name": "TStepInputs",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 58039,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeInput",
								"refersToTypeParameter": true
							}
						},
						"templateType": {
							"type": "reference",
							"target": 58240,
							"typeArguments": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
											"qualifiedName": "K"
										},
										"name": "K",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 58039,
										"name": "TInvokeInput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "ApplyStepOptions.TInvokeInput",
										"refersToTypeParameter": true
									}
								}
							],
							"name": "WorkflowData",
							"package": "@medusajs/workflows-sdk"
						}
					}
				},
				{
					"id": 58039,
					"name": "TInvokeInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 58040,
					"name": "TInvokeResultOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 58041,
					"name": "TInvokeResultCompensateInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 58005,
			"name": "createStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 387,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L387"
				}
			],
			"signatures": [
				{
					"id": 58006,
					"name": "createStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function creates a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "StepFunction",
								"target": 58206
							},
							{
								"kind": "text",
								"text": " that can be used as a step in a workflow constructed by the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createWorkflow",
								"target": 58042
							},
							{
								"kind": "text",
								"text": " function."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A step function to be used in a workflow."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createStep,\n  StepResponse\n} from \"@medusajs/framework/workflows-sdk\"\n\ninterface CreateProductInput {\n  title: string\n}\n\nexport const createProductStep = createStep(\n  \"createProductStep\",\n  async function (\n    input: CreateProductInput,\n    { container }\n  ) {\n    const productModuleService = container.resolve(\n      \"product\"\n    )\n    const product = await productModuleService.createProducts(input)\n    return new StepResponse({\n      product\n    }, {\n      product_id: product.id\n    })\n  },\n  async function (\n    input,\n    { container }\n  ) {\n    if (!input) {\n      return\n    }\n    const productModuleService = container.resolve(\n      \"product\"\n    )\n    await productModuleService.deleteProducts([input.product_id])\n  }\n)\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 387,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L387"
						}
					],
					"typeParameters": [
						{
							"id": 58007,
							"name": "TInvokeInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected input parameter to the invocation function."
									}
								]
							}
						},
						{
							"id": 58008,
							"name": "TInvokeResultOutput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected output parameter of the invocation function."
									}
								]
							}
						},
						{
							"id": 58009,
							"name": "TInvokeResultCompensateInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected input parameter to the compensation function."
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 58010,
							"name": "nameOrConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the step or its configuration."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 58011,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 58012,
															"name": "name",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
																	"line": 397,
																	"character": 9,
																	"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L397"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																58012
															]
														}
													],
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
															"line": 397,
															"character": 7,
															"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L397"
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 58369,
														"name": "TransactionStepsDefinition",
														"package": "@medusajs/orchestration"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "next"
															},
															{
																"type": "literal",
																"value": "uuid"
															},
															{
																"type": "literal",
																"value": "action"
															}
														]
													}
												],
												"name": "Omit",
												"package": "typescript"
											}
										]
									}
								]
							}
						},
						{
							"id": 58013,
							"name": "invokeFn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An invocation function that will be executed when the workflow is executed. The function must return an instance of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StepResponse",
										"target": 58058
									},
									{
										"kind": "text",
										"text": ". The constructor of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StepResponse",
										"target": 58058
									},
									{
										"kind": "text",
										"text": "\naccepts the output of the step as a first argument, and optionally as a second argument the data to be passed to the compensation function as a parameter."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 58015,
								"typeArguments": [
									{
										"type": "reference",
										"target": 58007,
										"name": "TInvokeInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 58008,
										"name": "TInvokeResultOutput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 58009,
										"name": "TInvokeResultCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "InvokeFn",
								"package": "@medusajs/workflows-sdk"
							}
						},
						{
							"id": 58014,
							"name": "compensateFn",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A compensation function that's executed if an error occurs in the workflow. It's used to roll-back actions when errors occur.\nIt accepts as a parameter the second argument passed to the constructor of the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StepResponse",
										"target": 58058
									},
									{
										"kind": "text",
										"text": " instance returned by the invocation function. If the\ninvocation function doesn't pass the second argument to "
									},
									{
										"kind": "code",
										"text": "`StepResponse`"
									},
									{
										"kind": "text",
										"text": " constructor, the compensation function receives the first argument\npassed to the "
									},
									{
										"kind": "code",
										"text": "`StepResponse`"
									},
									{
										"kind": "text",
										"text": " constructor instead."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 58023,
								"typeArguments": [
									{
										"type": "reference",
										"target": 58009,
										"name": "TInvokeResultCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "CompensateFn",
								"package": "@medusajs/workflows-sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 58206,
						"typeArguments": [
							{
								"type": "reference",
								"target": 58007,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 58008,
								"name": "TInvokeResultOutput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "StepFunction",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 58042,
			"name": "createWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
					"line": 88,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L88"
				}
			],
			"signatures": [
				{
					"id": 58043,
					"name": "createWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function creates a workflow with the provided name and a constructor function.\nThe constructor function builds the workflow from steps created by the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createStep",
								"target": 58005
							},
							{
								"kind": "text",
								"text": " function.\nThe returned workflow is an exported workflow of type "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ReturnWorkflow",
								"target": 58314
							},
							{
								"kind": "text",
								"text": ", meaning it's not executed right away. To execute it,\ninvoke the exported workflow, then run its "
							},
							{
								"kind": "code",
								"text": "`run`"
							},
							{
								"kind": "text",
								"text": " method."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The created workflow. You can later execute the workflow by invoking it, then using its "
									},
									{
										"kind": "code",
										"text": "`run`"
									},
									{
										"kind": "text",
										"text": " method."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createWorkflow,\n  WorkflowResponse\n} from \"@medusajs/framework/workflows-sdk\"\nimport { MedusaRequest, MedusaResponse } from \"@medusajs/framework/http\"\nimport {\n  createProductStep,\n  getProductStep,\n} from \"./steps\"\n\ninterface WorkflowInput {\n title: string\n}\n\nconst myWorkflow = createWorkflow(\n  \"my-workflow\",\n  (input: WorkflowInput) => {\n   // Everything here will be executed and resolved later\n   // during the execution. Including the data access.\n\n    const product = createProductStep(input)\n    return new WorkflowResponse(getProductStep(product.id))\n  }\n)\n\nexport async function GET(\n  req: MedusaRequest,\n  res: MedusaResponse\n) {\n  const { result: product } = await myWorkflow(req.scope)\n    .run({\n      input: {\n        title: \"Shirt\"\n      }\n    })\n\n  res.json({\n    product\n  })\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
							"line": 88,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L88"
						}
					],
					"typeParameters": [
						{
							"id": 58044,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the input passed to the composer function."
									}
								]
							}
						},
						{
							"id": 58045,
							"name": "TResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the output returned by the composer function."
									}
								]
							}
						},
						{
							"id": 58046,
							"name": "THooks",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of hooks defined in the workflow."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 58047,
							"name": "nameOrConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the workflow or its configuration."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 58048,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 58049,
															"name": "name",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
																	"line": 92,
																	"character": 28,
																	"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L92"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																58049
															]
														}
													],
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
															"line": 92,
															"character": 26,
															"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L92"
														}
													]
												}
											},
											{
												"type": "reference",
												"target": 58387,
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										]
									}
								]
							}
						},
						{
							"id": 58050,
							"name": "composer",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The constructor function that is executed when the "
									},
									{
										"kind": "code",
										"text": "`run`"
									},
									{
										"kind": "text",
										"text": " method in "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ReturnWorkflow",
										"target": 58314
									},
									{
										"kind": "text",
										"text": " is used.\nThe function can't be an arrow function or an asynchronus function. It also can't directly manipulate data.\nYou'll have to use the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "transform",
										"target": 58129
									},
									{
										"kind": "text",
										"text": " function if you need to directly manipulate data."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58051,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
											"line": 98,
											"character": 12,
											"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L98"
										}
									],
									"signatures": [
										{
											"id": 58052,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
													"line": 98,
													"character": 12,
													"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L98"
												}
											],
											"parameters": [
												{
													"id": 58053,
													"name": "input",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 58240,
														"typeArguments": [
															{
																"type": "reference",
																"target": 58044,
																"name": "TData",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": 58088,
														"typeArguments": [
															{
																"type": "reference",
																"target": 58045,
																"name": "TResult",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 58046,
																"name": "THooks",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "WorkflowResponse",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 58314,
						"typeArguments": [
							{
								"type": "reference",
								"target": 58044,
								"name": "TData",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 58045,
								"name": "TResult",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 58046,
								"name": "THooks",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "ReturnWorkflow",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 58058,
			"name": "StepResponse",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This class is used to create the response returned by a step. A step return its data by returning an instance of "
					},
					{
						"kind": "code",
						"text": "`StepResponse`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 58065,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 58066,
							"name": "StepResponse",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The constructor of the StepResponse"
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L28"
								}
							],
							"typeParameters": [
								{
									"id": 58067,
									"name": "TOutput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the output of the step."
											}
										]
									}
								},
								{
									"id": 58068,
									"name": "TCompensateInput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the compensation input. If the step doesn't specify any compensation input, then the type of "
											},
											{
												"kind": "code",
												"text": "`TCompensateInput`"
											},
											{
												"kind": "text",
												"text": " is the same\nas that of "
											},
											{
												"kind": "code",
												"text": "`TOutput`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"default": {
										"type": "reference",
										"target": 58067,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TOutput",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 58069,
									"name": "output",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The output of the step."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 58067,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TOutput",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 58070,
									"name": "compensateInput",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The input to be passed as a parameter to the step's compensation function. If not provided, the "
											},
											{
												"kind": "code",
												"text": "`output`"
											},
											{
												"kind": "text",
												"text": " will be provided instead."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 58068,
										"name": "TCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TCompensateInput",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58058,
								"typeArguments": [
									{
										"type": "reference",
										"target": 58067,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TOutput",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 58068,
										"name": "TCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TCompensateInput",
										"refersToTypeParameter": true
									}
								],
								"name": "StepResponse",
								"package": "@medusajs/workflows-sdk"
							}
						}
					]
				},
				{
					"id": 58059,
					"name": "permanentFailure",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 120,
							"character": 9,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L120"
						}
					],
					"signatures": [
						{
							"id": 58060,
							"name": "permanentFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a StepResponse that indicates that the step has failed and the retry mechanism should not kick in anymore."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { Product } from \"@medusajs/medusa\"\nimport {\n  createStep,\n  StepResponse,\n  createWorkflow\n} from \"@medusajs/workflows-sdk\"\n\ninterface CreateProductInput {\n  title: string\n}\n\nexport const createProductStep = createStep(\n  \"createProductStep\",\n  async function (\n    input: CreateProductInput,\n    context\n  ) {\n    const productService = context.container.resolve(\n      \"productService\"\n    )\n\n    try {\n      const product = await productService.createProducts(input)\n      return new StepResponse({\n        product\n      }, {\n        product_id: product.id\n      })\n    } catch (e) {\n      return StepResponse.permanentFailure(`Couldn't create the product: ${e}`)\n    }\n  }\n)\n\ninterface WorkflowInput {\n title: string\n}\n\nconst myWorkflow = createWorkflow<\n    WorkflowInput,\n    Product\n  >(\"my-workflow\", (input) => {\n   // Everything here will be executed and resolved later\n   // during the execution. Including the data access.\n\n    const product = createProductStep(input)\n  }\n)\n\nmyWorkflow()\n  .run({\n    input: {\n      title: \"Shirt\"\n    }\n  })\n  .then(({ errors, result }) => {\n    if (errors.length) {\n      errors.forEach((err) => {\n        if (typeof err.error === \"object\" && \"message\" in err.error) {\n          console.error(err.error.message)\n        } else {\n          console.error(err.error)\n        }\n      })\n    }\n    console.log(result)\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
									"line": 120,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L120"
								}
							],
							"parameters": [
								{
									"id": 58061,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An optional message to be logged."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"Permanent failure\""
								},
								{
									"id": 58062,
									"name": "compensateInput",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					]
				},
				{
					"id": 58063,
					"name": "skip",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 130,
							"character": 9,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L130"
						}
					],
					"signatures": [
						{
							"id": 58064,
							"name": "skip",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
									"line": 130,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L130"
								}
							],
							"type": {
								"type": "reference",
								"target": 58395,
								"name": "SkipStepResponse",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						58065
					]
				},
				{
					"title": "Methods",
					"children": [
						58059,
						58063
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
					"line": 15,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L15"
				}
			],
			"typeParameters": [
				{
					"id": 58086,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the output of the step."
							}
						]
					}
				},
				{
					"id": 58087,
					"name": "TCompensateInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the compensation input. If the step doesn't specify any compensation input, then the type of "
							},
							{
								"kind": "code",
								"text": "`TCompensateInput`"
							},
							{
								"kind": "text",
								"text": " is the same\nas that of "
							},
							{
								"kind": "code",
								"text": "`TOutput`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"default": {
						"type": "reference",
						"target": 58067,
						"name": "TOutput",
						"package": "@medusajs/workflows-sdk",
						"qualifiedName": "StepResponse.TOutput",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 58088,
			"name": "WorkflowResponse",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Workflow response class encapsulates the return value of a workflow"
					}
				]
			},
			"children": [
				{
					"id": 58097,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "OrchestrationUtils.SymbolMedusaWorkflowResponse"
				},
				{
					"id": 58089,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 14,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 58090,
							"name": "WorkflowResponse",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L14"
								}
							],
							"typeParameters": [
								{
									"id": 58091,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 58092,
									"name": "THooks",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isConst": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									},
									"default": {
										"type": "tuple"
									}
								}
							],
							"parameters": [
								{
									"id": 58093,
									"name": "$result",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 58240,
												"typeArguments": [
													{
														"type": "reference",
														"target": 58091,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.TResult",
														"refersToTypeParameter": true
													}
												],
												"name": "WorkflowData",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "union",
													"types": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
																	"qualifiedName": "K"
																},
																"name": "K",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 58091,
																"name": "TResult",
																"package": "@medusajs/workflows-sdk",
																"qualifiedName": "WorkflowResponse.TResult",
																"refersToTypeParameter": true
															}
														},
														{
															"type": "reference",
															"target": 58235,
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
																			"qualifiedName": "K"
																		},
																		"name": "K",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 58091,
																		"name": "TResult",
																		"package": "@medusajs/workflows-sdk",
																		"qualifiedName": "WorkflowResponse.TResult",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "WorkflowDataProperties",
															"package": "@medusajs/workflows-sdk"
														},
														{
															"type": "reference",
															"target": 58240,
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
																			"qualifiedName": "K"
																		},
																		"name": "K",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 58091,
																		"name": "TResult",
																		"package": "@medusajs/workflows-sdk",
																		"qualifiedName": "WorkflowResponse.TResult",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 58094,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58095,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 58096,
													"name": "hooks",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
															"line": 23,
															"character": 23,
															"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
														}
													],
													"type": {
														"type": "reference",
														"target": 58092,
														"name": "THooks",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.THooks",
														"refersToTypeParameter": true
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														58096
													]
												}
											],
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
													"line": 23,
													"character": 21,
													"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58088,
								"typeArguments": [
									{
										"type": "reference",
										"target": 58091,
										"name": "TResult",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.TResult",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 58092,
										"name": "THooks",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.THooks",
										"refersToTypeParameter": true
									}
								],
								"name": "WorkflowResponse",
								"package": "@medusajs/workflows-sdk"
							}
						}
					]
				},
				{
					"id": 58098,
					"name": "$result",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 15,
							"character": 11,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L15"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 58240,
								"typeArguments": [
									{
										"type": "reference",
										"target": 58091,
										"name": "TResult",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.TResult",
										"refersToTypeParameter": true
									}
								],
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								},
								"templateType": {
									"type": "union",
									"types": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 58091,
												"name": "TResult",
												"package": "@medusajs/workflows-sdk",
												"qualifiedName": "WorkflowResponse.TResult",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": 58235,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 58091,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.TResult",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "WorkflowDataProperties",
											"package": "@medusajs/workflows-sdk"
										},
										{
											"type": "reference",
											"target": 58240,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 58091,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.TResult",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 58099,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 23,
							"character": 11,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58100,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58101,
									"name": "hooks",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
											"line": 23,
											"character": 23,
											"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
										}
									],
									"type": {
										"type": "reference",
										"target": 58092,
										"name": "THooks",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.THooks",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58101
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
									"line": 23,
									"character": 21,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						58089
					]
				},
				{
					"title": "Properties",
					"children": [
						58097,
						58098,
						58099
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
					"line": 7,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L7"
				}
			],
			"typeParameters": [
				{
					"id": 58102,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 58103,
					"name": "THooks",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			]
		},
		{
			"id": 58125,
			"name": "parallelize",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/parallelize.ts",
					"line": 44,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/parallelize.ts#L44"
				}
			],
			"signatures": [
				{
					"id": 58126,
					"name": "parallelize",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function is used to run multiple steps in parallel. The result of each step will be returned as part of the result array."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The step results. The results are ordered in the array by the order they're passed in the function's parameter."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createWorkflow,\n  parallelize,\n  WorkflowResponse\n} from \"@medusajs/framework/workflows-sdk\"\nimport {\n  createProductStep,\n  createPricesStep,\n  attachProductToSalesChannelStep\n} from \"./steps\"\n\ninterface WorkflowInput {\n  title: string\n}\n\nconst myWorkflow = createWorkflow(\n  \"my-workflow\",\n  (input: WorkflowInput) => {\n   const product = createProductStep(input)\n\n   const [prices, productSalesChannel] = parallelize(\n     createPricesStep(product),\n     attachProductToSalesChannelStep(product)\n   )\n\n   return new WorkflowResponse({\n    prices,\n    productSalesChannel\n   })\n }\n)\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/parallelize.ts",
							"line": 44,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/parallelize.ts#L44"
						}
					],
					"typeParameters": [
						{
							"id": 58127,
							"name": "TResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "undefined"
										},
										{
											"type": "reference",
											"target": 58240,
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							}
						}
					],
					"parameters": [
						{
							"id": 58128,
							"name": "steps",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "reference",
								"target": 58127,
								"name": "TResult",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 58127,
						"name": "TResult",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 58407,
			"name": "Func1",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
					"line": 11,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 58413,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "object"
							},
							{
								"type": "reference",
								"target": 58240,
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				},
				{
					"id": 58414,
					"name": "U",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58408,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
							"line": 11,
							"character": 49
						}
					],
					"signatures": [
						{
							"id": 58409,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 58410,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 58413,
											"name": "T",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reference",
											"target": 58240,
											"typeArguments": [
												{
													"type": "inferred",
													"name": "U"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										},
										"trueType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
												"qualifiedName": "U"
											},
											"name": "U",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										},
										"falseType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": 58413,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "object"
											},
											"trueType": {
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": 58413,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												},
												"templateType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 58413,
															"name": "T",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													},
													"extendsType": {
														"type": "reference",
														"target": 58240,
														"typeArguments": [
															{
																"type": "inferred",
																"name": "U"
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													},
													"trueType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
															"qualifiedName": "U"
														},
														"name": "U",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"falseType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 58413,
															"name": "T",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												}
											},
											"falseType": {
												"type": "reflection",
												"declaration": {
													"id": 58411,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
															"line": 16,
															"character": 6
														}
													]
												}
											}
										}
									}
								},
								{
									"id": 58412,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58288,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 58414,
										"name": "U",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 58414,
												"name": "U",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 58415,
			"name": "Func",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
					"line": 20,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 58420,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 58421,
					"name": "U",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58416,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
							"line": 20,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 58417,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 58418,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58420,
										"name": "T",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 58419,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58288,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 58421,
										"name": "U",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 58421,
												"name": "U",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 58129,
			"name": "transform",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/transform.ts",
					"line": 63,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/transform.ts#L63"
				}
			],
			"signatures": [
				{
					"id": 58130,
					"name": "transform",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function transforms the output of other utility functions.\n\nFor example, if you're using the value(s) of some step(s) as an input to a later step. As you can't directly manipulate data in the  workflow constructor function passed to "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createWorkflow",
								"target": 58042
							},
							{
								"kind": "text",
								"text": ",\nthe "
							},
							{
								"kind": "code",
								"text": "`transform`"
							},
							{
								"kind": "text",
								"text": " function provides access to the runtime value of the step(s) output so that you can manipulate them.\n\nAnother example is if you're using the runtime value of some step(s) as the output of a workflow.\n\nIf you're also retrieving the output of a hook and want to check if its value is set, you must use a workflow to get the runtime value of that hook."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "There's no expected value to be returned by the "
									},
									{
										"kind": "code",
										"text": "`transform`"
									},
									{
										"kind": "text",
										"text": " function."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createWorkflow,\n  transform,\n  WorkflowResponse\n} from \"@medusajs/framework/workflows-sdk\"\nimport { step1, step2 } from \"./steps\"\n\ntype WorkflowInput = {\n  name: string\n}\n\nconst myWorkflow = createWorkflow(\n  \"hello-world\",\n  (input: WorkflowInput) => {\n    const str1 = step1(input)\n    const str2 = step2(input)\n\n    const message = transform({\n      str1,\n      str2\n    }, (input) => `${input.str1}${input.str2}`)\n\n    return new WorkflowResponse(message)\n})\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/transform.ts",
							"line": 63,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/transform.ts#L63"
						}
					],
					"typeParameters": [
						{
							"id": 58131,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "object"
									},
									{
										"type": "reference",
										"target": 58240,
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						},
						{
							"id": 58132,
							"name": "RFinal",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 58133,
							"name": "values",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The output(s) of other step functions."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 58131,
								"name": "T",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 58134,
							"name": "func",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The transform function used to perform action on the runtime values of the provided "
									},
									{
										"kind": "code",
										"text": "`values`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"target": 58407,
										"typeArguments": [
											{
												"type": "reference",
												"target": 58131,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 58132,
												"name": "RFinal",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "Func1",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 58240,
						"typeArguments": [
							{
								"type": "reference",
								"target": 58132,
								"name": "RFinal",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "WorkflowData",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 58186,
			"name": "StepFunctionResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 15,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L15"
				}
			],
			"typeParameters": [
				{
					"id": 58190,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58187,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 16,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L16"
						}
					],
					"signatures": [
						{
							"id": 58188,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 58189,
									"name": "this",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58248,
										"name": "CreateWorkflowComposerContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58240,
								"typeArguments": [
									{
										"type": "reference",
										"target": 58190,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							}
						}
					]
				}
			}
		},
		{
			"id": 58191,
			"name": "StepFunctionReturnConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 18,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L18"
				}
			],
			"typeParameters": [
				{
					"id": 58198,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58192,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58193,
							"name": "config",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L19"
								}
							],
							"signatures": [
								{
									"id": 58194,
									"name": "config",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 19,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L19"
										}
									],
									"parameters": [
										{
											"id": 58195,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 58196,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58197,
																	"name": "name",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 20,
																			"character": 14,
																			"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L20"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58197
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 20,
																	"character": 12,
																	"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L20"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Omit"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 58369,
																"name": "TransactionStepsDefinition",
																"package": "@medusajs/orchestration"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "next"
																	},
																	{
																		"type": "literal",
																		"value": "uuid"
																	},
																	{
																		"type": "literal",
																		"value": "action"
																	}
																]
															}
														],
														"name": "Omit",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 58240,
										"typeArguments": [
											{
												"type": "reference",
												"target": 58198,
												"name": "TOutput",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								58193
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 18,
							"character": 48,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L18"
						}
					]
				}
			}
		},
		{
			"id": 58422,
			"name": "KeysOfUnion",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
					"line": 27,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 58423,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 58423,
					"name": "T",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": 58423,
					"name": "T",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"trueType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 58423,
						"name": "T",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					}
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 58199,
			"name": "HookHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 28,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L28"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58200,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 28,
							"character": 26,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 58201,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 58202,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 59110,
			"name": "ConvertHookToObject",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
					"line": 30,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 59116,
					"name": "THook",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 59116,
					"name": "THook",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": 58114,
					"typeArguments": [
						{
							"type": "inferred",
							"name": "Name"
						},
						{
							"type": "inferred",
							"name": "Input"
						},
						{
							"type": "inferred",
							"name": "Output"
						}
					],
					"name": "Hook",
					"package": "@medusajs/workflows-sdk"
				},
				"trueType": {
					"type": "mapped",
					"parameter": "K",
					"parameterType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
							"qualifiedName": "Name"
						},
						"name": "Name",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					},
					"templateType": {
						"type": "reflection",
						"declaration": {
							"id": 59111,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
									"line": 36,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 59112,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 59115,
											"name": "TCompensateInput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 59113,
											"name": "invoke",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 58015,
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "Input"
														},
														"name": "Input",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "Output"
														},
														"name": "Output",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 59115,
														"name": "TCompensateInput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "InvokeFn",
												"package": "@medusajs/workflows-sdk"
											}
										},
										{
											"id": 59114,
											"name": "compensate",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 58023,
												"typeArguments": [
													{
														"type": "reference",
														"target": 59115,
														"name": "TCompensateInput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "CompensateFn",
												"package": "@medusajs/workflows-sdk"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 58750,
			"name": "ConvertHooksToFunctions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Helper to convert an array of hooks to functions"
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
					"line": 46,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 58752,
					"name": "THooks",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 58752,
					"name": "THooks",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "tuple",
					"elements": [
						{
							"type": "inferred",
							"name": "A"
						},
						{
							"type": "rest",
							"elementType": {
								"type": "inferred",
								"name": "R"
							}
						}
					]
				},
				"trueType": {
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 59110,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
										"qualifiedName": "A"
									},
									"name": "A",
									"package": "@medusajs/workflows-sdk",
									"refersToTypeParameter": true
								}
							],
							"name": "ConvertHookToObject",
							"package": "@medusajs/workflows-sdk"
						},
						{
							"type": "reference",
							"target": 58750,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
										"qualifiedName": "R"
									},
									"name": "R",
									"package": "@medusajs/workflows-sdk",
									"refersToTypeParameter": true
								}
							],
							"name": "ConvertHooksToFunctions",
							"package": "@medusajs/workflows-sdk"
						}
					]
				},
				"falseType": {
					"type": "reflection",
					"declaration": {
						"id": 58751,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
								"line": 51,
								"character": 4
							}
						]
					}
				}
			}
		},
		{
			"id": 58203,
			"name": "Void",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 53,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58204,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58205,
							"name": " $$type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 53,
									"character": 21,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
								}
							],
							"type": {
								"type": "literal",
								"value": "void"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58205
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 53,
							"character": 19,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
						}
					]
				}
			}
		},
		{
			"id": 58206,
			"name": "StepFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A step function to be used in a workflow."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 61,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L61"
				}
			],
			"typeParameters": [
				{
					"id": 58233,
					"name": "TInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the input of the step."
							}
						]
					}
				},
				{
					"id": 58234,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the output of the step."
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 58422,
							"typeArguments": [
								{
									"type": "reference",
									"target": 58233,
									"name": "TInput",
									"package": "@medusajs/workflows-sdk",
									"refersToTypeParameter": true
								}
							],
							"name": "KeysOfUnion",
							"package": "@medusajs/workflows-sdk"
						},
						"extendsType": {
							"type": "tuple"
						},
						"trueType": {
							"type": "reflection",
							"declaration": {
								"id": 58207,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"sources": [
									{
										"fileName": "workflows-sdk/src/utils/composer/type.ts",
										"line": 66,
										"character": 4,
										"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L66"
									}
								],
								"signatures": [
									{
										"id": 58208,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"sources": [
											{
												"fileName": "workflows-sdk/src/utils/composer/type.ts",
												"line": 67,
												"character": 6,
												"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L67"
											}
										],
										"type": {
											"type": "conditional",
											"checkType": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 58234,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 58209,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "never"
											},
											"trueType": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 58210,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58211,
																	"name": " $$type",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 53,
																			"character": 21,
																			"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": "void"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58211
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 91,
																	"character": 4,
																	"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L91"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": 58203,
														"name": "Void",
														"package": "@medusajs/workflows-sdk"
													},
													{
														"type": "reference",
														"target": 58235,
														"typeArguments": [
															{
																"type": "reference",
																"target": 58203,
																"name": "Void",
																"package": "@medusajs/workflows-sdk"
															}
														],
														"name": "WorkflowDataProperties",
														"package": "@medusajs/workflows-sdk"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 58212,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58213,
																	"name": "config",
																	"variant": "declaration",
																	"kind": 2048,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 97,
																			"character": 4,
																			"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																		}
																	],
																	"signatures": [
																		{
																			"id": 58214,
																			"name": "config",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 97,
																					"character": 4,
																					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																				}
																			],
																			"parameters": [
																				{
																					"id": 58215,
																					"name": "config",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intersection",
																						"types": [
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 58216,
																									"name": "__type",
																									"variant": "declaration",
																									"kind": 65536,
																									"flags": {},
																									"children": [
																										{
																											"id": 58217,
																											"name": "name",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {
																												"isOptional": true
																											},
																											"sources": [
																												{
																													"fileName": "workflows-sdk/src/utils/composer/type.ts",
																													"line": 98,
																													"character": 16,
																													"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											}
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"children": [
																												58217
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "workflows-sdk/src/utils/composer/type.ts",
																											"line": 98,
																											"character": 14,
																											"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																										}
																									]
																								}
																							},
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																									"qualifiedName": "Omit"
																								},
																								"typeArguments": [
																									{
																										"type": "reference",
																										"target": 58369,
																										"name": "TransactionStepsDefinition",
																										"package": "@medusajs/orchestration"
																									},
																									{
																										"type": "union",
																										"types": [
																											{
																												"type": "literal",
																												"value": "next"
																											},
																											{
																												"type": "literal",
																												"value": "uuid"
																											},
																											{
																												"type": "literal",
																												"value": "action"
																											}
																										]
																									}
																								],
																								"name": "Omit",
																								"package": "typescript"
																							}
																						]
																					}
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": 58240,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 58203,
																						"name": "Void",
																						"package": "@medusajs/workflows-sdk"
																					}
																				],
																				"name": "WorkflowData",
																				"package": "@medusajs/workflows-sdk"
																			}
																		}
																	]
																}
															],
															"groups": [
																{
																	"title": "Methods",
																	"children": [
																		58213
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 96,
																	"character": 30,
																	"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": 58191,
														"typeArguments": [
															{
																"type": "reference",
																"target": 58234,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "StepFunctionReturnConfig",
														"package": "@medusajs/workflows-sdk"
													}
												]
											},
											"falseType": {
												"type": "intersection",
												"types": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 58234,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																	"qualifiedName": "Item"
																},
																"name": "Item",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														},
														"trueType": {
															"type": "array",
															"elementType": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "Item"
																		},
																		"name": "Item",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 58240,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																					"qualifiedName": "Item"
																				},
																				"name": "Item",
																				"package": "@medusajs/workflows-sdk",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														},
														"falseType": {
															"type": "conditional",
															"checkType": {
																"type": "reference",
																"target": 58234,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															"extendsType": {
																"type": "intrinsic",
																"name": "object"
															},
															"trueType": {
																"type": "mapped",
																"parameter": "Key",
																"parameterType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		},
																		{
																			"type": "intrinsic",
																			"name": "symbol"
																		}
																	]
																},
																"templateType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "unknown",
																				"name": "..."
																			},
																			"objectType": {
																				"type": "unknown",
																				"name": "..."
																			}
																		},
																		{
																			"type": "reference",
																			"target": 58240,
																			"typeArguments": [
																				{
																					"type": "unknown",
																					"name": "..."
																				}
																			],
																			"name": "WorkflowData",
																			"package": "@medusajs/workflows-sdk"
																		}
																	]
																}
															},
															"falseType": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reference",
																		"target": 58234,
																		"name": "TOutput",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 58235,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 58234,
																				"name": "TOutput",
																				"package": "@medusajs/workflows-sdk",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "WorkflowDataProperties",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													},
													{
														"type": "reference",
														"target": 58234,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 58235,
														"typeArguments": [
															{
																"type": "reference",
																"target": 58234,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "WorkflowDataProperties",
														"package": "@medusajs/workflows-sdk"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 58218,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58219,
																	"name": "config",
																	"variant": "declaration",
																	"kind": 2048,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 97,
																			"character": 4,
																			"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																		}
																	],
																	"signatures": [
																		{
																			"id": 58220,
																			"name": "config",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 97,
																					"character": 4,
																					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																				}
																			],
																			"parameters": [
																				{
																					"id": 58221,
																					"name": "config",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intersection",
																						"types": [
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 58222,
																									"name": "__type",
																									"variant": "declaration",
																									"kind": 65536,
																									"flags": {},
																									"children": [
																										{
																											"id": 58223,
																											"name": "name",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {
																												"isOptional": true
																											},
																											"sources": [
																												{
																													"fileName": "workflows-sdk/src/utils/composer/type.ts",
																													"line": 98,
																													"character": 16,
																													"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											}
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"children": [
																												58223
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "workflows-sdk/src/utils/composer/type.ts",
																											"line": 98,
																											"character": 14,
																											"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																										}
																									]
																								}
																							},
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																									"qualifiedName": "Omit"
																								},
																								"typeArguments": [
																									{
																										"type": "reference",
																										"target": 58369,
																										"name": "TransactionStepsDefinition",
																										"package": "@medusajs/orchestration"
																									},
																									{
																										"type": "union",
																										"types": [
																											{
																												"type": "literal",
																												"value": "next"
																											},
																											{
																												"type": "literal",
																												"value": "uuid"
																											},
																											{
																												"type": "literal",
																												"value": "action"
																											}
																										]
																									}
																								],
																								"name": "Omit",
																								"package": "typescript"
																							}
																						]
																					}
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": 58240,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 58234,
																						"name": "TOutput",
																						"package": "@medusajs/workflows-sdk",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "WorkflowData",
																				"package": "@medusajs/workflows-sdk"
																			}
																		}
																	]
																}
															],
															"groups": [
																{
																	"title": "Methods",
																	"children": [
																		58219
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 96,
																	"character": 30,
																	"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": 58191,
														"typeArguments": [
															{
																"type": "reference",
																"target": 58234,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "StepFunctionReturnConfig",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										}
									}
								]
							}
						},
						"falseType": {
							"type": "reflection",
							"declaration": {
								"id": 58224,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"sources": [
									{
										"fileName": "workflows-sdk/src/utils/composer/type.ts",
										"line": 72,
										"character": 4,
										"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L72"
									}
								],
								"signatures": [
									{
										"id": 58225,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"sources": [
											{
												"fileName": "workflows-sdk/src/utils/composer/type.ts",
												"line": 73,
												"character": 6,
												"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L73"
											}
										],
										"parameters": [
											{
												"id": 58226,
												"name": "input",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": 58233,
															"name": "TInput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": 58240,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 58233,
																	"name": "TInput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											}
										],
										"type": {
											"type": "intersection",
											"types": [
												{
													"type": "conditional",
													"checkType": {
														"type": "reference",
														"target": 58234,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"extendsType": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																"qualifiedName": "Item"
															},
															"name": "Item",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													},
													"trueType": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																		"qualifiedName": "Item"
																	},
																	"name": "Item",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																{
																	"type": "reference",
																	"target": 58240,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																				"qualifiedName": "Item"
																			},
																			"name": "Item",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "WorkflowData",
																	"package": "@medusajs/workflows-sdk"
																}
															]
														}
													},
													"falseType": {
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 58234,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "object"
														},
														"trueType": {
															"type": "mapped",
															"parameter": "Key",
															"parameterType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	}
																]
															},
															"templateType": {
																"type": "union",
																"types": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																				"qualifiedName": "Key"
																			},
																			"name": "Key",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 58234,
																			"typeArguments": [
																				{
																					"type": "unknown",
																					"name": "..."
																				}
																			],
																			"name": "TOutput",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	},
																	{
																		"type": "reference",
																		"target": 58240,
																		"typeArguments": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "unknown",
																					"name": "..."
																				},
																				"objectType": {
																					"type": "unknown",
																					"name": "..."
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														},
														"falseType": {
															"type": "intersection",
															"types": [
																{
																	"type": "reference",
																	"target": 58234,
																	"name": "TOutput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																{
																	"type": "reference",
																	"target": 58235,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 58234,
																			"name": "TOutput",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "WorkflowDataProperties",
																	"package": "@medusajs/workflows-sdk"
																}
															]
														}
													}
												},
												{
													"type": "reference",
													"target": 58234,
													"name": "TOutput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												},
												{
													"type": "reference",
													"target": 58235,
													"typeArguments": [
														{
															"type": "reference",
															"target": 58234,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													],
													"name": "WorkflowDataProperties",
													"package": "@medusajs/workflows-sdk"
												},
												{
													"type": "reflection",
													"declaration": {
														"id": 58227,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 58228,
																"name": "config",
																"variant": "declaration",
																"kind": 2048,
																"flags": {},
																"sources": [
																	{
																		"fileName": "workflows-sdk/src/utils/composer/type.ts",
																		"line": 97,
																		"character": 4,
																		"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																	}
																],
																"signatures": [
																	{
																		"id": 58229,
																		"name": "config",
																		"variant": "signature",
																		"kind": 4096,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "workflows-sdk/src/utils/composer/type.ts",
																				"line": 97,
																				"character": 4,
																				"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																			}
																		],
																		"parameters": [
																			{
																				"id": 58230,
																				"name": "config",
																				"variant": "param",
																				"kind": 32768,
																				"flags": {},
																				"type": {
																					"type": "intersection",
																					"types": [
																						{
																							"type": "reflection",
																							"declaration": {
																								"id": 58231,
																								"name": "__type",
																								"variant": "declaration",
																								"kind": 65536,
																								"flags": {},
																								"children": [
																									{
																										"id": 58232,
																										"name": "name",
																										"variant": "declaration",
																										"kind": 1024,
																										"flags": {
																											"isOptional": true
																										},
																										"sources": [
																											{
																												"fileName": "workflows-sdk/src/utils/composer/type.ts",
																												"line": 98,
																												"character": 16,
																												"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																											}
																										],
																										"type": {
																											"type": "intrinsic",
																											"name": "string"
																										}
																									}
																								],
																								"groups": [
																									{
																										"title": "Properties",
																										"children": [
																											58232
																										]
																									}
																								],
																								"sources": [
																									{
																										"fileName": "workflows-sdk/src/utils/composer/type.ts",
																										"line": 98,
																										"character": 14,
																										"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																									}
																								]
																							}
																						},
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																								"qualifiedName": "Omit"
																							},
																							"typeArguments": [
																								{
																									"type": "reference",
																									"target": 58369,
																									"name": "TransactionStepsDefinition",
																									"package": "@medusajs/orchestration"
																								},
																								{
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": "next"
																										},
																										{
																											"type": "literal",
																											"value": "uuid"
																										},
																										{
																											"type": "literal",
																											"value": "action"
																										}
																									]
																								}
																							],
																							"name": "Omit",
																							"package": "typescript"
																						}
																					]
																				}
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 58240,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": 58234,
																					"name": "TOutput",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				}
																			],
																			"name": "WorkflowData",
																			"package": "@medusajs/workflows-sdk"
																		}
																	}
																]
															}
														],
														"groups": [
															{
																"title": "Methods",
																"children": [
																	58228
																]
															}
														],
														"sources": [
															{
																"fileName": "workflows-sdk/src/utils/composer/type.ts",
																"line": 96,
																"character": 30,
																"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
															}
														]
													}
												},
												{
													"type": "reference",
													"target": 58191,
													"typeArguments": [
														{
															"type": "reference",
															"target": 58234,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													],
													"name": "StepFunctionReturnConfig",
													"package": "@medusajs/workflows-sdk"
												}
											]
										}
									}
								]
							}
						}
					},
					{
						"type": "reference",
						"target": 58235,
						"typeArguments": [
							{
								"type": "reference",
								"target": 58234,
								"name": "TOutput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "WorkflowDataProperties",
						"package": "@medusajs/workflows-sdk"
					}
				]
			}
		},
		{
			"id": 58235,
			"name": "WorkflowDataProperties",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 78,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L78"
				}
			],
			"typeParameters": [
				{
					"id": 58239,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58236,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58237,
							"name": "__type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 79,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L79"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58238,
							"name": "__step__",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 80,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L80"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58237,
								58238
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 78,
							"character": 50,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L78"
						}
					]
				}
			}
		},
		{
			"id": 58240,
			"name": "WorkflowData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This type is used to encapsulate the input or output type of all utils."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 88,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L88"
				}
			],
			"typeParameters": [
				{
					"id": 58247,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of a step's input or result."
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 58247,
							"name": "T",
							"package": "@medusajs/workflows-sdk",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "array",
							"elementType": {
								"type": "inferred",
								"name": "Item"
							}
						},
						"trueType": {
							"type": "array",
							"elementType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "Item"
										},
										"name": "Item",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 58240,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "Item"
												},
												"name": "Item",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 58247,
								"name": "T",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "intrinsic",
								"name": "object"
							},
							"trueType": {
								"type": "mapped",
								"parameter": "Key",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 58247,
										"name": "T",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								},
								"templateType": {
									"type": "union",
									"types": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 58247,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": 58240,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 58247,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							"falseType": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 58247,
										"name": "T",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 58235,
										"typeArguments": [
											{
												"type": "reference",
												"target": 58247,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "WorkflowDataProperties",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					},
					{
						"type": "reference",
						"target": 58247,
						"name": "T",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 58235,
						"typeArguments": [
							{
								"type": "reference",
								"target": 58247,
								"name": "T",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "WorkflowDataProperties",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 58241,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58242,
									"name": "config",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 97,
											"character": 4,
											"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
										}
									],
									"signatures": [
										{
											"id": 58243,
											"name": "config",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 97,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
												}
											],
											"parameters": [
												{
													"id": 58244,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intersection",
														"types": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 58245,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 58246,
																			"name": "name",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 98,
																					"character": 16,
																					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				58246
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 98,
																			"character": 14,
																			"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																		}
																	]
																}
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Omit"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 58369,
																		"name": "TransactionStepsDefinition",
																		"package": "@medusajs/orchestration"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": "next"
																			},
																			{
																				"type": "literal",
																				"value": "uuid"
																			},
																			{
																				"type": "literal",
																				"value": "action"
																			}
																		]
																	}
																],
																"name": "Omit",
																"package": "typescript"
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 58240,
												"typeArguments": [
													{
														"type": "reference",
														"target": 58247,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "WorkflowData",
												"package": "@medusajs/workflows-sdk"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										58242
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 96,
									"character": 30,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 58248,
			"name": "CreateWorkflowComposerContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 105,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L105"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58249,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58250,
							"name": "__type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58251,
							"name": "hooks_",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 107,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L107"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58252,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 58253,
											"name": "declared",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 108,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L108"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 58254,
											"name": "registered",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 109,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L109"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												58253,
												58254
											]
										}
									],
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 107,
											"character": 10,
											"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L107"
										}
									]
								}
							}
						},
						{
							"id": 58255,
							"name": "hooksCallback_",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 111,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L111"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 58199,
										"name": "HookHandler",
										"package": "@medusajs/workflows-sdk"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 58256,
							"name": "workflowId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 112,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L112"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58257,
							"name": "flow",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L113"
								}
							],
							"type": {
								"type": "reference",
								"target": 58424,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 58258,
							"name": "isAsync",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 114,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L114"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58259,
							"name": "handlers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 115,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L115"
								}
							],
							"type": {
								"type": "reference",
								"target": 58513,
								"name": "WorkflowHandler",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 58260,
							"name": "overriddenHandler",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 116,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L116"
								}
							],
							"type": {
								"type": "reference",
								"target": 58513,
								"name": "WorkflowHandler",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 58261,
							"name": "stepBinder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 117,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L117"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58262,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 117,
											"character": 14,
											"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L117"
										}
									],
									"signatures": [
										{
											"id": 58263,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 58265,
													"name": "TOutput",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"default": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"parameters": [
												{
													"id": 58264,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 58186,
														"name": "StepFunctionResult",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 58240,
												"typeArguments": [
													{
														"type": "reference",
														"target": 58265,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "WorkflowData",
												"package": "@medusajs/workflows-sdk"
											}
										}
									]
								}
							}
						},
						{
							"id": 58266,
							"name": "hookBinder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 120,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L120"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58267,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 120,
											"character": 14,
											"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L120"
										}
									],
									"signatures": [
										{
											"id": 58268,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58269,
													"name": "name",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 58270,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58271,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 120,
																	"character": 33,
																	"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L120"
																}
															],
															"signatures": [
																{
																	"id": 58272,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 58199,
																		"name": "HookHandler",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58273,
							"name": "stepConditions_",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 121,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L121"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 58274,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 58275,
													"name": "condition",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/type.ts",
															"line": 124,
															"character": 6,
															"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L124"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58276,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 124,
																	"character": 17,
																	"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L124"
																}
															],
															"signatures": [
																{
																	"id": 58277,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 58278,
																			"name": "args",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {
																				"isRest": true
																			},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "boolean"
																			},
																			{
																				"type": "reference",
																				"target": 58240,
																				"name": "WorkflowData",
																				"package": "@medusajs/workflows-sdk"
																			}
																		]
																	}
																}
															]
														}
													}
												},
												{
													"id": 58279,
													"name": "input",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/type.ts",
															"line": 125,
															"character": 6,
															"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L125"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														58275,
														58279
													]
												}
											],
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 123,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L123"
												}
											]
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 58280,
							"name": "parallelizeBinder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 128,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L128"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58281,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 128,
											"character": 21,
											"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L128"
										}
									],
									"signatures": [
										{
											"id": 58282,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 58287,
													"name": "TOutput",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"target": 58240,
																	"name": "WorkflowData",
																	"package": "@medusajs/workflows-sdk"
																},
																{
																	"type": "intrinsic",
																	"name": "undefined"
																}
															]
														}
													},
													"default": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 58240,
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													}
												}
											],
											"parameters": [
												{
													"id": 58283,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58284,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 131,
																	"character": 8,
																	"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L131"
																}
															],
															"signatures": [
																{
																	"id": 58285,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 58286,
																			"name": "this",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 58248,
																				"name": "CreateWorkflowComposerContext",
																				"package": "@medusajs/workflows-sdk"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58287,
																		"name": "TOutput",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 58287,
												"name": "TOutput",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58250,
								58251,
								58255,
								58256,
								58257,
								58258,
								58259,
								58260,
								58261,
								58266,
								58273,
								58280
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 105,
							"character": 44,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L105"
						}
					]
				}
			}
		},
		{
			"id": 58288,
			"name": "StepExecutionContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The step's context."
					}
				]
			},
			"children": [
				{
					"id": 58289,
					"name": "workflowId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the workflow."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 142,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L142"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58290,
					"name": "attempt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attempt number of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 147,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L147"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 58291,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The idempoency key of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 152,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L152"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58292,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The idempoency key of the parent step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 157,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L157"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58293,
					"name": "preventReleaseEvents",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to prevent release events."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 162,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L162"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 58294,
					"name": "stepName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 167,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L167"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58295,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The action of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 172,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L172"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "invoke"
							},
							{
								"type": "literal",
								"value": "compensate"
							}
						]
					}
				},
				{
					"id": 58296,
					"name": "container",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The container used to access resources, such as services, in the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 177,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L177"
						}
					],
					"type": {
						"type": "reference",
						"target": 58517,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 58297,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Metadata passed in the input."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 181,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L181"
						}
					],
					"type": {
						"type": "reference",
						"target": 58538,
						"name": "TransactionMetadata",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 58298,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "inline-tag",
								"tag": "@inheritDoc",
								"text": "types!Context"
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 185,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L185"
						}
					],
					"type": {
						"type": "reference",
						"target": 58546,
						"name": "Context",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 58299,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 189,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L189"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58300,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 193,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L193"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58301,
					"name": " getStepResult",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 201,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L201"
						}
					],
					"signatures": [
						{
							"id": 58302,
							"name": " getStepResult",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get access to the result returned by a named step. Returns undefined\nwhen step is not found or when nothing was returned.\n\nAdding a space hides the method from the autocomplete"
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 201,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L201"
								}
							],
							"parameters": [
								{
									"id": 58303,
									"name": "stepId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58304,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "invoke"
											},
											{
												"type": "literal",
												"value": "compensate"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 58305,
					"name": " stepDefinition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get access to the definition of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 206,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L206"
						}
					],
					"type": {
						"type": "reference",
						"target": 58369,
						"name": "TransactionStepsDefinition",
						"package": "@medusajs/orchestration"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						58289,
						58290,
						58291,
						58292,
						58293,
						58294,
						58295,
						58296,
						58297,
						58298,
						58299,
						58300,
						58305
					]
				},
				{
					"title": "Methods",
					"children": [
						58301
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 138,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L138"
				}
			]
		},
		{
			"id": 58306,
			"name": "WorkflowTransactionContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 209,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L209"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 58288,
						"name": "StepExecutionContext",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reference",
						"target": 58561,
						"name": "OriginalWorkflowTransactionContext",
						"package": "@medusajs/orchestration",
						"qualifiedName": "TransactionContext"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 58307,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58308,
									"name": "invoke",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 211,
											"character": 4,
											"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L211"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58309,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 211,
													"character": 12,
													"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L211"
												}
											],
											"indexSignatures": [
												{
													"id": 58310,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/type.ts",
															"line": 211,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L211"
														}
													],
													"parameters": [
														{
															"id": 58311,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58312,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58313,
																	"name": "output",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 211,
																			"character": 31,
																			"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L211"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58313
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 211,
																	"character": 29,
																	"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L211"
																}
															]
														}
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58308
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 210,
									"character": 39,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L210"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 58314,
			"name": "ReturnWorkflow",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An exported workflow, which is the type of a workflow constructed by the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "createWorkflow",
						"target": 58042
					},
					{
						"kind": "text",
						"text": " function. The exported workflow can be invoked to create\nan executable workflow, optionally within a specified container. So, to execute the workflow, you must invoke the exported workflow, then run the\n"
					},
					{
						"kind": "code",
						"text": "`run`"
					},
					{
						"kind": "text",
						"text": " method of the exported workflow."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "text",
								"text": "To execute a workflow:\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nmyWorkflow()\n  .run({\n    input: {\n      name: \"John\"\n    }\n  })\n  .then(({ result }) => {\n    console.log(result)\n  })\n```"
							},
							{
								"kind": "text",
								"text": "\n\nTo specify the container of the workflow, you can pass it as an argument to the call of the exported workflow. This is necessary when executing the workflow\nwithin a Medusa resource such as an API Route or a Subscriber.\n\nFor example:\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nimport type {\n  MedusaRequest,\n  MedusaResponse\n} from \"@medusajs/medusa\";\nimport myWorkflow from \"../../../workflows/hello-world\";\n\nexport async function GET(\n  req: MedusaRequest,\n  res: MedusaResponse\n) {\n  const { result } = await myWorkflow(req.scope)\n    .run({\n      input: {\n        name: req.query.name as string\n      }\n    })\n\n  res.send(result)\n}\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 261,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L261"
				}
			],
			"typeParameters": [
				{
					"id": 58344,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 58345,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 58346,
					"name": "THooks",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 58315,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 261,
									"character": 67,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L261"
								}
							],
							"signatures": [
								{
									"id": 58316,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 262,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L262"
										}
									],
									"typeParameters": [
										{
											"id": 58317,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 58318,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 58319,
											"name": "container",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 58517,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 58320,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {},
																"children": [
																	{
																		"id": 58321,
																		"name": "__joinerConfig",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "types/dist/modules-sdk/index.d.ts",
																				"line": 90,
																				"character": 4
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 58570,
																			"name": "ModuleJoinerConfig",
																			"package": "@medusajs/types"
																		}
																	},
																	{
																		"id": 58322,
																		"name": "__definition",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "types/dist/modules-sdk/index.d.ts",
																				"line": 91,
																				"character": 4
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 58595,
																			"name": "ModuleDefinition",
																			"package": "@medusajs/types"
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"children": [
																			58321,
																			58322
																		]
																	}
																],
																"sources": [
																	{
																		"fileName": "types/dist/modules-sdk/index.d.ts",
																		"line": 89,
																		"character": 37
																	}
																]
															}
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 58606,
														"name": "LocalWorkflow",
														"package": "@medusajs/orchestration"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "run"
															},
															{
																"type": "literal",
																"value": "registerStepSuccess"
															},
															{
																"type": "literal",
																"value": "registerStepFailure"
															},
															{
																"type": "literal",
																"value": "cancel"
															}
														]
													}
												],
												"name": "Omit",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 58728,
												"typeArguments": [
													{
														"type": "reference",
														"target": 58344,
														"name": "TData",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 58345,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 58317,
														"name": "TDataOverride",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 58318,
														"name": "TResultOverride",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "ExportedWorkflow",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 58323,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58324,
									"name": "runAsStep",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/execute-another-workflow)."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 278,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L278"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58325,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 278,
													"character": 13,
													"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L278"
												}
											],
											"signatures": [
												{
													"id": 58326,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"comment": {
														"summary": [],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "The workflow's result"
																	}
																]
															}
														]
													},
													"parameters": [
														{
															"id": 58327,
															"name": "{\n    input,\n  }",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 58328,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 58329,
																			"name": "input",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The workflow's input."
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 284,
																					"character": 4,
																					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L284"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "reference",
																						"target": 58344,
																						"name": "TData",
																						"package": "@medusajs/workflows-sdk",
																						"refersToTypeParameter": true
																					},
																					{
																						"type": "reference",
																						"target": 58240,
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": 58344,
																								"name": "TData",
																								"package": "@medusajs/workflows-sdk",
																								"refersToTypeParameter": true
																							}
																						],
																						"name": "WorkflowData",
																						"package": "@medusajs/workflows-sdk"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				58329
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 280,
																			"character": 5,
																			"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L280"
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "ReturnType"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 58206,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 58344,
																		"name": "TData",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 58345,
																		"name": "TResult",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																],
																"name": "StepFunction",
																"package": "@medusajs/workflows-sdk"
															}
														],
														"name": "ReturnType",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 58330,
									"name": "run",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method executes a workflow."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 292,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L292"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58331,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 292,
													"character": 7,
													"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L292"
												}
											],
											"signatures": [
												{
													"id": 58332,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"comment": {
														"summary": [],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "Details of the workflow's execution, including its result."
																	}
																]
															}
														]
													},
													"typeParameters": [
														{
															"id": 58334,
															"name": "TDataOverride",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {},
															"default": {
																"type": "intrinsic",
																"name": "undefined"
															}
														},
														{
															"id": 58335,
															"name": "TResultOverride",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {},
															"default": {
																"type": "intrinsic",
																"name": "undefined"
															}
														}
													],
													"parameters": [
														{
															"id": 58333,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The options to execute the workflow."
																	}
																]
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Parameters"
																},
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "run"
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 58728,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": 58344,
																					"name": "TData",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				},
																				{
																					"type": "reference",
																					"target": 58345,
																					"name": "TResult",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				},
																				{
																					"type": "reference",
																					"target": 58334,
																					"name": "TDataOverride",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				},
																				{
																					"type": "reference",
																					"target": 58335,
																					"name": "TResultOverride",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				}
																			],
																			"name": "ExportedWorkflow",
																			"package": "@medusajs/workflows-sdk"
																		}
																	}
																],
																"name": "Parameters",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "ReturnType"
														},
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "run"
																},
																"objectType": {
																	"type": "reference",
																	"target": 58728,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 58344,
																			"name": "TData",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "reference",
																			"target": 58345,
																			"name": "TResult",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "reference",
																			"target": 58334,
																			"name": "TDataOverride",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "reference",
																			"target": 58335,
																			"name": "TResultOverride",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "ExportedWorkflow",
																	"package": "@medusajs/workflows-sdk"
																}
															}
														],
														"name": "ReturnType",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 58336,
									"name": "getName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the workflow's name."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 302,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L302"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58337,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 302,
													"character": 11,
													"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L302"
												}
											],
											"signatures": [
												{
													"id": 58338,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 58339,
									"name": "config",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method sets the workflow's configurations."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 306,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L306"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58340,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 306,
													"character": 10,
													"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L306"
												}
											],
											"signatures": [
												{
													"id": 58341,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 58342,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 58387,
																"name": "TransactionModelOptions",
																"package": "@medusajs/orchestration"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 58343,
									"name": "hooks",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/workflow-hooks#how-to-consume-a-hook)."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 312,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L312"
										}
									],
									"type": {
										"type": "reference",
										"target": 58750,
										"typeArguments": [
											{
												"type": "reference",
												"target": 58346,
												"name": "THooks",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "ConvertHooksToFunctions",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58324,
										58330,
										58336,
										58339,
										58343
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 269,
									"character": 4,
									"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L269"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 58347,
			"name": "UnwrapWorkflowInputDataType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Extract the raw type of the expected input data of a workflow."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```ts\ntype WorkflowInputData = UnwrapWorkflowInputDataType<typeof myWorkflow>\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 321,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/394226b5c18d11072da826ed6a07d4e602e62f18/packages/core/workflows-sdk/src/utils/composer/type.ts#L321"
				}
			],
			"typeParameters": [
				{
					"id": 58348,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 58314,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ReturnWorkflow",
						"package": "@medusajs/workflows-sdk"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 58348,
					"name": "T",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": 58314,
					"typeArguments": [
						{
							"type": "inferred",
							"name": "TData"
						},
						{
							"type": "inferred",
							"name": "R"
						},
						{
							"type": "inferred",
							"name": "THooks"
						}
					],
					"name": "ReturnWorkflow",
					"package": "@medusajs/workflows-sdk"
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
						"qualifiedName": "TData"
					},
					"name": "TData",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 58753,
			"name": "ConditionFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
					"line": 7,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 58759,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "object"
							},
							{
								"type": "reference",
								"target": 58240,
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58754,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
							"line": 7,
							"character": 58
						}
					],
					"signatures": [
						{
							"id": 58755,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 58756,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 58759,
											"name": "T",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reference",
											"target": 58240,
											"typeArguments": [
												{
													"type": "inferred",
													"name": "U"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										},
										"trueType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
												"qualifiedName": "U"
											},
											"name": "U",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										},
										"falseType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": 58759,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "object"
											},
											"trueType": {
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": 58759,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												},
												"templateType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 58759,
															"name": "T",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													},
													"extendsType": {
														"type": "reference",
														"target": 58240,
														"typeArguments": [
															{
																"type": "inferred",
																"name": "U"
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													},
													"trueType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
															"qualifiedName": "U"
														},
														"name": "U",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"falseType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 58759,
															"name": "T",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												}
											},
											"falseType": {
												"type": "reflection",
												"declaration": {
													"id": 58757,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
															"line": 12,
															"character": 6
														}
													]
												}
											}
										}
									}
								},
								{
									"id": 58758,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58288,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			}
		},
		{
			"id": 58760,
			"name": "ThenFunc",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
					"line": 16,
					"character": 5
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58761,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
							"line": 16,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 58762,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 58764,
									"name": "ThenResolver",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58765,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
													"line": 16,
													"character": 38
												}
											],
											"signatures": [
												{
													"id": 58766,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"parameters": [
								{
									"id": 58763,
									"name": "resolver",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58764,
										"name": "ThenResolver",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "ReturnType"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 58764,
											"name": "ThenResolver",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "ReturnType",
									"package": "typescript"
								},
								"extendsType": {
									"type": "reference",
									"target": 58240,
									"typeArguments": [
										{
											"type": "inferred",
											"name": "ReturnedWorkflowData"
										}
									],
									"name": "WorkflowData",
									"package": "@medusajs/workflows-sdk"
								},
								"trueType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 58240,
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
														"qualifiedName": "ReturnedWorkflowData"
													},
													"name": "ReturnedWorkflowData",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										},
										{
											"type": "intrinsic",
											"name": "undefined"
										}
									]
								},
								"falseType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "ReturnType"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 58764,
											"name": "ThenResolver",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "ReturnType",
									"package": "typescript"
								}
							}
						}
					]
				}
			}
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"children": [
				58821,
				59509,
				59529,
				59540
			]
		},
		{
			"title": "Classes",
			"children": [
				58561,
				59500,
				59461,
				59572,
				58989,
				58792,
				58395,
				58424,
				59181,
				59117,
				58606,
				58058,
				58088
			]
		},
		{
			"title": "Interfaces",
			"children": [
				59418,
				58801,
				58886,
				58820,
				59370,
				58838,
				59589,
				59353,
				58824,
				58546,
				58032,
				58288
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				58538,
				59409,
				58369,
				58387,
				58784,
				58906,
				59581,
				59546,
				59470,
				58902,
				58513,
				58767,
				58365,
				58517,
				59586,
				59547,
				59349,
				59360,
				59375,
				59565,
				59385,
				58864,
				58874,
				58595,
				59525,
				59558,
				59553,
				58858,
				58570,
				58853,
				59391,
				59517,
				59087,
				59091,
				59096,
				59101,
				59081,
				58728,
				58114,
				58015,
				58023,
				58029,
				58407,
				58415,
				58186,
				58191,
				58422,
				58199,
				59110,
				58750,
				58203,
				58206,
				58235,
				58240,
				58248,
				58306,
				58314,
				58347,
				58753,
				58760
			]
		},
		{
			"title": "Variables",
			"children": [
				58406
			]
		},
		{
			"title": "Functions",
			"children": [
				58104,
				58005,
				58042,
				58125,
				58129
			]
		}
	],
	"packageName": "@medusajs/workflows-sdk",
	"symbolIdMap": {
		"57986": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/index.ts",
			"qualifiedName": ""
		},
		"58005": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "createStep"
		},
		"58006": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "createStep"
		},
		"58007": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeInput"
		},
		"58008": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeResultOutput"
		},
		"58009": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeResultCompensateInput"
		},
		"58010": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "nameOrConfig"
		},
		"58011": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"58012": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type.name"
		},
		"58013": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "invokeFn"
		},
		"58014": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "compensateFn"
		},
		"58015": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "InvokeFn"
		},
		"58016": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"58017": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"58018": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "input"
		},
		"58019": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "context"
		},
		"58020": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInput"
		},
		"58021": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TOutput"
		},
		"58022": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TCompensateInput"
		},
		"58023": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "CompensateFn"
		},
		"58024": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"58025": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"58026": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "input"
		},
		"58027": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "context"
		},
		"58028": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "T"
		},
		"58029": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "LocalStepConfig"
		},
		"58030": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"58031": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type.name"
		},
		"58032": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions"
		},
		"58033": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.stepName"
		},
		"58034": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.stepConfig"
		},
		"58035": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.input"
		},
		"58036": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.invokeFn"
		},
		"58037": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.compensateFn"
		},
		"58038": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TStepInputs"
		},
		"58039": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TInvokeInput"
		},
		"58040": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TInvokeResultOutput"
		},
		"58041": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TInvokeResultCompensateInput"
		},
		"58042": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "createWorkflow"
		},
		"58043": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "createWorkflow"
		},
		"58044": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "TData"
		},
		"58045": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "TResult"
		},
		"58046": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "THooks"
		},
		"58047": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "nameOrConfig"
		},
		"58048": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"58049": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type.name"
		},
		"58050": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "composer"
		},
		"58051": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"58052": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"58053": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "input"
		},
		"58058": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse"
		},
		"58059": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.permanentFailure"
		},
		"58060": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.permanentFailure"
		},
		"58061": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "message"
		},
		"58062": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "compensateInput"
		},
		"58063": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.skip"
		},
		"58064": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.skip"
		},
		"58065": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.__constructor"
		},
		"58066": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse"
		},
		"58067": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TOutput"
		},
		"58068": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TCompensateInput"
		},
		"58069": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "output"
		},
		"58070": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "compensateInput"
		},
		"58086": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TOutput"
		},
		"58087": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TCompensateInput"
		},
		"58088": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse"
		},
		"58089": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.__constructor"
		},
		"58090": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse"
		},
		"58091": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.TResult"
		},
		"58092": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.THooks"
		},
		"58093": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "$result"
		},
		"58094": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "options"
		},
		"58095": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type"
		},
		"58096": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type.hooks"
		},
		"58097": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.__type"
		},
		"58098": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.$result"
		},
		"58099": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.options"
		},
		"58100": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type"
		},
		"58101": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type.hooks"
		},
		"58102": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.TResult"
		},
		"58103": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.THooks"
		},
		"58104": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "createHook"
		},
		"58105": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "createHook"
		},
		"58106": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Name"
		},
		"58107": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "TInvokeInput"
		},
		"58108": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "TInvokeOutput"
		},
		"58109": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "name"
		},
		"58110": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "hookInput"
		},
		"58111": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "options"
		},
		"58112": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type"
		},
		"58113": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.resultValidator"
		},
		"58114": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Hook"
		},
		"58115": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type"
		},
		"58116": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.__type"
		},
		"58117": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.name"
		},
		"58118": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.getResult"
		},
		"58119": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.getResult"
		},
		"58120": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type. output"
		},
		"58121": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type. input"
		},
		"58122": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Name"
		},
		"58123": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Input"
		},
		"58124": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Output"
		},
		"58125": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "parallelize"
		},
		"58126": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "parallelize"
		},
		"58127": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "TResult"
		},
		"58128": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "steps"
		},
		"58129": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "transform"
		},
		"58130": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "transform"
		},
		"58131": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "T"
		},
		"58132": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "RFinal"
		},
		"58133": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "values"
		},
		"58134": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "func"
		},
		"58186": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepFunctionResult"
		},
		"58187": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58188": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58189": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "this"
		},
		"58190": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"58191": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepFunctionReturnConfig"
		},
		"58192": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58193": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"58194": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"58195": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"58196": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58197": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"58198": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"58199": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "HookHandler"
		},
		"58200": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58201": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58202": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"58203": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "Void"
		},
		"58204": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58205": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type. $$type"
		},
		"58206": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepFunction"
		},
		"58207": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58208": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58209": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"58210": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58211": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": " $$type"
		},
		"58212": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58213": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"58214": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"58215": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"58216": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58217": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"58218": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58219": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"58220": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"58221": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"58222": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58223": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"58224": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58225": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58226": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"58227": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58228": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"58229": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"58230": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"58231": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58232": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"58233": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TInput"
		},
		"58234": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"58235": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "WorkflowDataProperties"
		},
		"58236": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58237": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"58238": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"58239": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"58240": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "WorkflowData"
		},
		"58241": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58242": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"58243": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"58244": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"58245": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58246": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"58247": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"58248": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "CreateWorkflowComposerContext"
		},
		"58249": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58250": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"58251": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks_"
		},
		"58252": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58253": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.declared"
		},
		"58254": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.registered"
		},
		"58255": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooksCallback_"
		},
		"58256": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.workflowId"
		},
		"58257": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.flow"
		},
		"58258": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.isAsync"
		},
		"58259": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.handlers"
		},
		"58260": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.overriddenHandler"
		},
		"58261": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.stepBinder"
		},
		"58262": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58263": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58264": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "fn"
		},
		"58265": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"58266": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hookBinder"
		},
		"58267": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58268": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58269": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "name"
		},
		"58270": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "fn"
		},
		"58271": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58272": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58273": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.stepConditions_"
		},
		"58274": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58275": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.condition"
		},
		"58276": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58277": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58278": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"58279": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"58280": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.parallelizeBinder"
		},
		"58281": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58282": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58283": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "fn"
		},
		"58284": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58285": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58286": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "this"
		},
		"58287": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"58288": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext"
		},
		"58289": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.workflowId"
		},
		"58290": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.attempt"
		},
		"58291": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.idempotencyKey"
		},
		"58292": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.parentStepIdempotencyKey"
		},
		"58293": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.preventReleaseEvents"
		},
		"58294": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.stepName"
		},
		"58295": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.action"
		},
		"58296": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.container"
		},
		"58297": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.metadata"
		},
		"58298": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.context"
		},
		"58299": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.eventGroupId"
		},
		"58300": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.transactionId"
		},
		"58301": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext. getStepResult"
		},
		"58302": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext. getStepResult"
		},
		"58303": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "stepId"
		},
		"58304": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "action"
		},
		"58305": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext. stepDefinition"
		},
		"58306": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "WorkflowTransactionContext"
		},
		"58307": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58308": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.invoke"
		},
		"58309": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58310": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__index"
		},
		"58312": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58313": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.output"
		},
		"58314": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "ReturnWorkflow"
		},
		"58315": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58316": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58317": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"58318": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"58319": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"58320": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58321": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"58322": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"58323": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58324": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"58325": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58326": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58328": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58329": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"58330": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"58331": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58332": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58333": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"58334": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"58335": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"58336": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"58337": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58338": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58339": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"58340": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58341": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58342": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"58343": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"58344": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TData"
		},
		"58345": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResult"
		},
		"58346": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "THooks"
		},
		"58347": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "UnwrapWorkflowInputDataType"
		},
		"58348": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"58365": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowStepHandler"
		},
		"58366": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"58367": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"58368": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "args"
		},
		"58369": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "TransactionStepsDefinition"
		},
		"58370": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58371": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.uuid"
		},
		"58372": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.action"
		},
		"58373": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.continueOnPermanentFailure"
		},
		"58374": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.skipOnPermanentFailure"
		},
		"58375": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.noCompensation"
		},
		"58376": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.maxRetries"
		},
		"58377": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retryInterval"
		},
		"58378": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retryIntervalAwaiting"
		},
		"58379": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.timeout"
		},
		"58380": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.async"
		},
		"58381": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.nested"
		},
		"58382": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.backgroundExecution"
		},
		"58383": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.compensateAsync"
		},
		"58384": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.noWait"
		},
		"58385": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.saveResponse"
		},
		"58386": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.next"
		},
		"58387": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "TransactionModelOptions"
		},
		"58388": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58389": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.timeout"
		},
		"58390": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.store"
		},
		"58391": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retentionTime"
		},
		"58392": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.storeExecution"
		},
		"58393": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.idempotent"
		},
		"58394": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.schedule"
		},
		"58395": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse"
		},
		"58396": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse.isSkipStepResponse"
		},
		"58397": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse.isSkipStepResponse"
		},
		"58398": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "error"
		},
		"58399": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse.__constructor"
		},
		"58400": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse"
		},
		"58401": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "message"
		},
		"58402": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "stepResponse"
		},
		"58403": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.#private"
		},
		"58404": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.getStepResponse"
		},
		"58405": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.getStepResponse"
		},
		"58406": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/symbol.ts",
			"qualifiedName": "SymbolWorkflowHook"
		},
		"58407": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "Func1"
		},
		"58408": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"58409": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"58410": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "input"
		},
		"58411": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"58412": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "context"
		},
		"58413": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "T"
		},
		"58414": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "U"
		},
		"58415": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "Func"
		},
		"58416": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"58417": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"58418": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "input"
		},
		"58419": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "context"
		},
		"58420": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "T"
		},
		"58421": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "U"
		},
		"58422": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "KeysOfUnion"
		},
		"58423": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"58424": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder"
		},
		"58425": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.__constructor"
		},
		"58426": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder"
		},
		"58427": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"58428": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.steps"
		},
		"58429": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.hasChanges_"
		},
		"58430": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.hasChanges"
		},
		"58431": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.hasChanges"
		},
		"58432": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.load"
		},
		"58433": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.load"
		},
		"58434": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"58435": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.addAction"
		},
		"58436": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.addAction"
		},
		"58437": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"58438": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"58439": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.replaceAction"
		},
		"58440": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.replaceAction"
		},
		"58441": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "existingAction"
		},
		"58442": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"58443": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"58444": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionBefore"
		},
		"58445": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionBefore"
		},
		"58446": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "existingAction"
		},
		"58447": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"58448": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"58449": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionAfter"
		},
		"58450": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionAfter"
		},
		"58451": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "existingAction"
		},
		"58452": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"58453": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"58454": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.appendTo"
		},
		"58455": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.appendTo"
		},
		"58456": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "step"
		},
		"58457": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "newStep"
		},
		"58458": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.appendAction"
		},
		"58459": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.appendAction"
		},
		"58460": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"58461": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "to"
		},
		"58462": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"58463": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.move"
		},
		"58464": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.move"
		},
		"58465": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "actionToMove"
		},
		"58466": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "targetAction"
		},
		"58467": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "__2"
		},
		"58468": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "__type"
		},
		"58469": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "__type.runInParallel"
		},
		"58470": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "__type.mergeNext"
		},
		"58471": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.moveAction"
		},
		"58472": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.moveAction"
		},
		"58473": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "actionToMove"
		},
		"58474": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "targetAction"
		},
		"58475": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.moveAndMergeNextAction"
		},
		"58476": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.moveAndMergeNextAction"
		},
		"58477": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "actionToMove"
		},
		"58478": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "targetAction"
		},
		"58479": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.mergeActions"
		},
		"58480": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.mergeActions"
		},
		"58481": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "where"
		},
		"58482": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "actions"
		},
		"58483": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.deleteAction"
		},
		"58484": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.deleteAction"
		},
		"58485": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"58486": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"58487": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.pruneAction"
		},
		"58488": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.pruneAction"
		},
		"58489": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"58490": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findStepByAction"
		},
		"58491": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findStepByAction"
		},
		"58492": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"58493": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "step"
		},
		"58494": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findOrThrowStepByAction"
		},
		"58495": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findOrThrowStepByAction"
		},
		"58496": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"58497": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"58498": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findParentStepByAction"
		},
		"58499": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findParentStepByAction"
		},
		"58500": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"58501": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "step"
		},
		"58502": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findLastStep"
		},
		"58503": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findLastStep"
		},
		"58504": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"58505": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.updateDepths"
		},
		"58506": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.updateDepths"
		},
		"58507": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "startingStep"
		},
		"58508": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "parent"
		},
		"58509": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "incr"
		},
		"58510": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "beginFrom"
		},
		"58511": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.build"
		},
		"58512": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.build"
		},
		"58513": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowHandler"
		},
		"58514": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"58515": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.invoke"
		},
		"58516": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.compensate"
		},
		"58517": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"58518": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"58519": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"58520": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"58521": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "K"
		},
		"58522": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"58523": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"58524": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"58525": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"58526": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"58527": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"58528": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.registerAdd"
		},
		"58529": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"58530": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"58531": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "name"
		},
		"58532": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "registration"
		},
		"58533": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"58534": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.createScope"
		},
		"58535": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"58536": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"58537": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "Cradle"
		},
		"58538": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionMetadata"
		},
		"58539": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type"
		},
		"58540": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.model_id"
		},
		"58541": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.idempotency_key"
		},
		"58542": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.action"
		},
		"58543": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.action_type"
		},
		"58544": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.attempt"
		},
		"58545": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.timestamp"
		},
		"58546": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"58547": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"58548": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"58549": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"58550": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"58551": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"58552": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"58553": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"58554": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"58555": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"58556": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"58557": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"58558": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"58559": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"58560": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"58561": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext"
		},
		"58562": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext.__constructor"
		},
		"58563": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext"
		},
		"58564": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "payload"
		},
		"58565": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "invoke"
		},
		"58566": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "compensate"
		},
		"58567": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext.payload"
		},
		"58568": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext.invoke"
		},
		"58569": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext.compensate"
		},
		"58570": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"58571": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58572": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"58573": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"58574": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"58575": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58576": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"58577": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.entity"
		},
		"58578": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"58579": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58580": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"58581": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"58582": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"58583": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"58584": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"58585": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"58586": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"58587": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"58588": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"58589": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"58590": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"58591": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58592": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"58593": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"58594": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"58595": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDefinition"
		},
		"58596": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58597": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"58598": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultPackage"
		},
		"58599": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"58600": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolvePath"
		},
		"58601": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isRequired"
		},
		"58602": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"58603": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"58604": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__passSharedContainer"
		},
		"58605": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"58606": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow"
		},
		"58607": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.__constructor"
		},
		"58608": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow"
		},
		"58609": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "workflowId"
		},
		"58610": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "modulesLoaded"
		},
		"58611": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58612": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"58613": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"58614": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.container_"
		},
		"58615": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.workflowId"
		},
		"58616": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.flow"
		},
		"58617": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.customOptions"
		},
		"58618": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.workflow"
		},
		"58619": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.handlers"
		},
		"58620": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.medusaContext"
		},
		"58621": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.container"
		},
		"58622": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.container"
		},
		"58623": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.container"
		},
		"58624": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "modulesLoaded"
		},
		"58625": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58626": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"58627": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"58628": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.resolveContainer"
		},
		"58629": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.contextualizedMedusaModules"
		},
		"58630": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.commit"
		},
		"58631": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.commit"
		},
		"58632": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.getFlow"
		},
		"58633": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.getFlow"
		},
		"58634": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerEventCallbacks"
		},
		"58635": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.run"
		},
		"58636": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.run"
		},
		"58637": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "uniqueTransactionId"
		},
		"58638": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "input"
		},
		"58639": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"58640": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"58641": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "flowMetadata"
		},
		"58642": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58643": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"58644": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentIdempotencyKey"
		},
		"58645": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.sourcePath"
		},
		"58646": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"58647": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"58648": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"58650": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.getRunningTransaction"
		},
		"58651": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.getRunningTransaction"
		},
		"58652": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "uniqueTransactionId"
		},
		"58653": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"58654": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.cancel"
		},
		"58655": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.cancel"
		},
		"58656": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "transactionOrTransactionId"
		},
		"58657": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "_"
		},
		"58658": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"58659": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"58660": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerStepSuccess"
		},
		"58661": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerStepSuccess"
		},
		"58662": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "idempotencyKey"
		},
		"58663": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "response"
		},
		"58664": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"58665": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"58666": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerStepFailure"
		},
		"58667": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerStepFailure"
		},
		"58668": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "idempotencyKey"
		},
		"58669": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "error"
		},
		"58670": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"58671": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"58672": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.setOptions"
		},
		"58673": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.setOptions"
		},
		"58674": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"58675": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.addAction"
		},
		"58676": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.addAction"
		},
		"58677": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"58678": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"58679": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"58680": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.replaceAction"
		},
		"58681": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.replaceAction"
		},
		"58682": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "existingAction"
		},
		"58683": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"58684": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"58685": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"58686": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.insertActionBefore"
		},
		"58687": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.insertActionBefore"
		},
		"58688": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "existingAction"
		},
		"58689": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"58690": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"58691": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"58692": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.insertActionAfter"
		},
		"58693": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.insertActionAfter"
		},
		"58694": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "existingAction"
		},
		"58695": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"58696": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"58697": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"58698": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.appendAction"
		},
		"58699": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.appendAction"
		},
		"58700": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"58701": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "to"
		},
		"58702": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"58703": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"58704": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.moveAction"
		},
		"58705": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.moveAction"
		},
		"58706": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "actionToMove"
		},
		"58707": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "targetAction"
		},
		"58708": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.moveAndMergeNextAction"
		},
		"58709": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.moveAndMergeNextAction"
		},
		"58710": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "actionToMove"
		},
		"58711": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "targetAction"
		},
		"58712": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.mergeActions"
		},
		"58713": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.mergeActions"
		},
		"58714": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "where"
		},
		"58715": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "actions"
		},
		"58716": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.deleteAction"
		},
		"58717": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.deleteAction"
		},
		"58718": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"58719": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "parentSteps"
		},
		"58720": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.pruneAction"
		},
		"58721": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.pruneAction"
		},
		"58722": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"58723": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.assertHandler"
		},
		"58724": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.assertHandler"
		},
		"58725": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"58726": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"58727": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.onLoad"
		},
		"58728": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "ExportedWorkflow"
		},
		"58729": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58730": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.run"
		},
		"58731": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58732": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58733": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"58734": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.registerStepSuccess"
		},
		"58735": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58736": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58737": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"58738": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.registerStepFailure"
		},
		"58739": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58740": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58741": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"58742": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.cancel"
		},
		"58743": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58744": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58745": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"58746": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TData"
		},
		"58747": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TResult"
		},
		"58748": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"58749": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"58750": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "ConvertHooksToFunctions"
		},
		"58751": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58752": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "THooks"
		},
		"58753": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "ConditionFunction"
		},
		"58754": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"58755": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"58756": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "input"
		},
		"58757": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"58758": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "context"
		},
		"58759": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "T"
		},
		"58760": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "ThenFunc"
		},
		"58761": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"58762": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"58763": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "resolver"
		},
		"58764": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "ThenResolver"
		},
		"58765": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"58766": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"58767": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowStepHandlerArguments"
		},
		"58768": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"58769": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.container"
		},
		"58770": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.payload"
		},
		"58771": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.invoke"
		},
		"58772": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"58773": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.__index"
		},
		"58775": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.compensate"
		},
		"58776": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"58777": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.__index"
		},
		"58779": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.metadata"
		},
		"58780": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.transaction"
		},
		"58781": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.step"
		},
		"58782": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.orchestrator"
		},
		"58783": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.context"
		},
		"58784": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "SchedulerOptions"
		},
		"58785": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58786": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.concurrency"
		},
		"58787": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.numberOfExecutions"
		},
		"58788": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58789": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.cron"
		},
		"58790": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58791": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.interval"
		},
		"58792": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror"
		},
		"58793": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.__constructor"
		},
		"58794": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror"
		},
		"58795": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "name"
		},
		"58796": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "message"
		},
		"58797": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "stepResponse"
		},
		"58798": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.#private"
		},
		"58799": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.getStepResponse"
		},
		"58800": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.getStepResponse"
		},
		"58801": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "InternalStep"
		},
		"58802": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "InternalStep.next"
		},
		"58803": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "InternalStep.depth"
		},
		"58804": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "InternalStep.parent"
		},
		"58805": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.uuid"
		},
		"58806": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.action"
		},
		"58807": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.continueOnPermanentFailure"
		},
		"58808": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.skipOnPermanentFailure"
		},
		"58809": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.noCompensation"
		},
		"58810": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.maxRetries"
		},
		"58811": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retryInterval"
		},
		"58812": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retryIntervalAwaiting"
		},
		"58813": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.timeout"
		},
		"58814": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.async"
		},
		"58815": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.nested"
		},
		"58816": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.backgroundExecution"
		},
		"58817": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.compensateAsync"
		},
		"58818": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.noWait"
		},
		"58819": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.saveResponse"
		},
		"58820": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "ModuleImplementations"
		},
		"58821": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionHandlerType"
		},
		"58822": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionHandlerType.INVOKE"
		},
		"58823": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionHandlerType.COMPENSATE"
		},
		"58824": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"58825": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"58826": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"58827": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"58828": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"58829": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"58830": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"58831": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"58832": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"58833": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"58834": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"58835": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"58836": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"58837": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"58838": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"58839": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"58840": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"58841": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"58842": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"58843": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"58844": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"58845": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"58846": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"58847": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"58848": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"58849": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"58850": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"58851": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"58852": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"58853": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"58854": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58855": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"58856": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.filterable"
		},
		"58857": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.hasMany"
		},
		"58858": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"58859": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58860": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"58861": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"58862": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"58863": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"58864": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "InternalModuleDeclaration"
		},
		"58865": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58866": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"58867": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"58868": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"58869": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolve"
		},
		"58870": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"58871": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"58872": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"58873": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.worker_mode"
		},
		"58874": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ExternalModuleDeclaration"
		},
		"58875": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58876": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"58877": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"58878": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.server"
		},
		"58879": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58880": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"58881": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.url"
		},
		"58882": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.keepAlive"
		},
		"58883": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"58884": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"58885": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"58886": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition"
		},
		"58887": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.id"
		},
		"58888": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.handler"
		},
		"58889": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"58890": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"58891": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "container"
		},
		"58892": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "context"
		},
		"58893": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.orchestrator"
		},
		"58894": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.flow_"
		},
		"58895": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.handlers_"
		},
		"58896": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"58897": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.invoke"
		},
		"58898": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.compensate"
		},
		"58899": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.options"
		},
		"58900": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.requiredModules"
		},
		"58901": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.optionalModules"
		},
		"58902": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "StepHandler"
		},
		"58903": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "__type"
		},
		"58904": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "__type.invoke"
		},
		"58905": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "__type.compensate"
		},
		"58906": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "DistributedTransactionEvents"
		},
		"58907": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58908": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onBegin"
		},
		"58909": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58910": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58911": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58912": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58913": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58914": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onResume"
		},
		"58915": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58916": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58917": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58918": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58919": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58920": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onFinish"
		},
		"58921": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58922": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58923": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58924": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58925": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58926": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.result"
		},
		"58927": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.errors"
		},
		"58928": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onTimeout"
		},
		"58929": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58930": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58931": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58932": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58933": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58934": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepBegin"
		},
		"58935": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58936": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58937": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58938": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58939": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"58940": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58941": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepSuccess"
		},
		"58942": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58943": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58944": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58945": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58946": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"58947": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58948": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepFailure"
		},
		"58949": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58950": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58951": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58952": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58953": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"58954": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58955": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepAwaiting"
		},
		"58956": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58957": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58958": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58959": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58960": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"58961": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58962": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onCompensateBegin"
		},
		"58963": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58964": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58965": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58966": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58967": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58968": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onCompensateStepSuccess"
		},
		"58969": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58970": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58971": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58972": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58973": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"58974": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58975": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onCompensateStepFailure"
		},
		"58976": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58977": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58978": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58979": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58980": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"58981": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58982": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepSkipped"
		},
		"58983": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58984": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58985": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58986": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58987": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"58988": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58989": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction"
		},
		"58990": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.keyValueStore"
		},
		"58991": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.setStorage"
		},
		"58992": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.setStorage"
		},
		"58993": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "storage"
		},
		"58994": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.keyPrefix"
		},
		"58995": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.loadTransaction"
		},
		"58996": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.loadTransaction"
		},
		"58997": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "modelId"
		},
		"58998": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "transactionId"
		},
		"58999": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "options"
		},
		"59000": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type"
		},
		"59001": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"59002": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.__constructor"
		},
		"59003": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction"
		},
		"59004": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "flow"
		},
		"59005": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handler"
		},
		"59006": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "payload"
		},
		"59007": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "errors"
		},
		"59008": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "context"
		},
		"59009": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.#private"
		},
		"59010": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.flow"
		},
		"59011": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.handler"
		},
		"59012": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.payload"
		},
		"59013": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.modelId"
		},
		"59014": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.transactionId"
		},
		"59015": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.runId"
		},
		"59016": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.errors"
		},
		"59017": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.context"
		},
		"59018": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getFlow"
		},
		"59019": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getFlow"
		},
		"59020": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getContext"
		},
		"59021": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getContext"
		},
		"59022": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getErrors"
		},
		"59023": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getErrors"
		},
		"59024": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handlerType"
		},
		"59025": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.addError"
		},
		"59026": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.addError"
		},
		"59027": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "action"
		},
		"59028": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handlerType"
		},
		"59029": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "error"
		},
		"59030": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.addResponse"
		},
		"59031": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.addResponse"
		},
		"59032": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "action"
		},
		"59033": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handlerType"
		},
		"59034": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "response"
		},
		"59035": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasFinished"
		},
		"59036": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasFinished"
		},
		"59037": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getState"
		},
		"59038": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getState"
		},
		"59039": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.isPartiallyCompleted"
		},
		"59040": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.isPartiallyCompleted"
		},
		"59041": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.canInvoke"
		},
		"59042": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.canInvoke"
		},
		"59043": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.canRevert"
		},
		"59044": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.canRevert"
		},
		"59045": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasTimeout"
		},
		"59046": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasTimeout"
		},
		"59047": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getTimeout"
		},
		"59048": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getTimeout"
		},
		"59049": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.saveCheckpoint"
		},
		"59050": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.saveCheckpoint"
		},
		"59051": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "ttl"
		},
		"59052": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleRetry"
		},
		"59053": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleRetry"
		},
		"59054": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "step"
		},
		"59055": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "interval"
		},
		"59056": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearRetry"
		},
		"59057": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearRetry"
		},
		"59058": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "step"
		},
		"59059": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleTransactionTimeout"
		},
		"59060": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleTransactionTimeout"
		},
		"59061": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "interval"
		},
		"59062": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearTransactionTimeout"
		},
		"59063": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearTransactionTimeout"
		},
		"59064": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleStepTimeout"
		},
		"59065": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleStepTimeout"
		},
		"59066": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "step"
		},
		"59067": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "interval"
		},
		"59068": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearStepTimeout"
		},
		"59069": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearStepTimeout"
		},
		"59070": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "step"
		},
		"59071": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.setTemporaryData"
		},
		"59072": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.setTemporaryData"
		},
		"59073": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "key"
		},
		"59074": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "value"
		},
		"59075": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getTemporaryData"
		},
		"59076": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getTemporaryData"
		},
		"59077": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "key"
		},
		"59078": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasTemporaryData"
		},
		"59079": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasTemporaryData"
		},
		"59080": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "key"
		},
		"59081": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "WorkflowResult"
		},
		"59082": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"59083": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.errors"
		},
		"59084": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.transaction"
		},
		"59085": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.result"
		},
		"59086": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TResult"
		},
		"59087": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowRunOptions"
		},
		"59088": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"59089": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.input"
		},
		"59090": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TData"
		},
		"59091": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowRegisterStepSuccessOptions"
		},
		"59092": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"59093": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"59094": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.response"
		},
		"59095": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TData"
		},
		"59096": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowRegisterStepFailureOptions"
		},
		"59097": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"59098": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"59099": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.response"
		},
		"59100": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TData"
		},
		"59101": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowCancelOptions"
		},
		"59102": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"59103": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.transaction"
		},
		"59104": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.transactionId"
		},
		"59105": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.context"
		},
		"59106": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.throwOnError"
		},
		"59107": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.logOnError"
		},
		"59108": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.events"
		},
		"59109": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.container"
		},
		"59110": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "ConvertHookToObject"
		},
		"59111": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59112": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"59113": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "invoke"
		},
		"59114": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "compensate"
		},
		"59115": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TCompensateInput"
		},
		"59116": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "THook"
		},
		"59117": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep"
		},
		"59120": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.stepFailed"
		},
		"59121": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.id"
		},
		"59122": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.uuid"
		},
		"59123": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.depth"
		},
		"59124": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.definition"
		},
		"59125": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.invoke"
		},
		"59126": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"59127": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.state"
		},
		"59128": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.status"
		},
		"59129": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.compensate"
		},
		"59130": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"59131": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.state"
		},
		"59132": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.status"
		},
		"59133": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.attempts"
		},
		"59134": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.failures"
		},
		"59135": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.lastAttempt"
		},
		"59136": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.retryRescheduledAt"
		},
		"59137": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasScheduledRetry"
		},
		"59138": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.timedOutAt"
		},
		"59139": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.startedAt"
		},
		"59140": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.next"
		},
		"59141": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.saveResponse"
		},
		"59142": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.getStates"
		},
		"59143": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.getStates"
		},
		"59144": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"59145": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.state"
		},
		"59146": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.status"
		},
		"59147": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.beginCompensation"
		},
		"59148": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.beginCompensation"
		},
		"59149": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.isCompensating"
		},
		"59150": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.isCompensating"
		},
		"59151": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.isInvoking"
		},
		"59152": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.isInvoking"
		},
		"59153": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.changeState"
		},
		"59154": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.changeState"
		},
		"59155": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "toState"
		},
		"59156": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.changeStatus"
		},
		"59157": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.changeStatus"
		},
		"59158": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "toStatus"
		},
		"59159": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasRetryScheduled"
		},
		"59160": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasRetryScheduled"
		},
		"59161": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasRetryInterval"
		},
		"59162": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasRetryInterval"
		},
		"59163": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasTimeout"
		},
		"59164": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasTimeout"
		},
		"59165": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.getTimeout"
		},
		"59166": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.getTimeout"
		},
		"59167": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canRetry"
		},
		"59168": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canRetry"
		},
		"59169": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasAwaitingRetry"
		},
		"59170": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasAwaitingRetry"
		},
		"59171": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canRetryAwaiting"
		},
		"59172": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canRetryAwaiting"
		},
		"59173": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canInvoke"
		},
		"59174": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canInvoke"
		},
		"59175": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "flowState"
		},
		"59176": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canCompensate"
		},
		"59177": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canCompensate"
		},
		"59178": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "flowState"
		},
		"59179": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canCancel"
		},
		"59180": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canCancel"
		},
		"59181": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator"
		},
		"59182": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.ROOT_STEP"
		},
		"59183": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.DEFAULT_TTL"
		},
		"59184": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.DEFAULT_RETRIES"
		},
		"59185": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.workflowOptions"
		},
		"59186": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getWorkflowOptions"
		},
		"59187": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getWorkflowOptions"
		},
		"59188": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "modelId"
		},
		"59189": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.traceTransaction"
		},
		"59190": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59191": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59192": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transactionResume"
		},
		"59193": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59194": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59195": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "args"
		},
		"59196": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "metadata"
		},
		"59197": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59198": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.model_id"
		},
		"59199": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction_id"
		},
		"59200": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.flow_metadata"
		},
		"59201": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"59202": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"59203": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentIdempotencyKey"
		},
		"59204": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.sourcePath"
		},
		"59205": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"59206": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"59207": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"59209": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.traceStep"
		},
		"59210": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59211": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59212": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "handler"
		},
		"59213": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59214": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59215": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "args"
		},
		"59216": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "metadata"
		},
		"59217": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59218": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.action"
		},
		"59219": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.type"
		},
		"59220": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.step_id"
		},
		"59221": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.step_uuid"
		},
		"59222": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.attempts"
		},
		"59223": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.failures"
		},
		"59224": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.async"
		},
		"59225": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.idempotency_key"
		},
		"59226": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.isExpectedError"
		},
		"59227": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.clone"
		},
		"59228": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.clone"
		},
		"59229": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "orchestrator"
		},
		"59230": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.SEPARATOR"
		},
		"59231": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getKeyName"
		},
		"59232": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getKeyName"
		},
		"59233": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "params"
		},
		"59234": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.setStepSuccess"
		},
		"59235": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.skipStep"
		},
		"59236": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.setStepTimeout"
		},
		"59237": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.setStepFailure"
		},
		"59238": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.loadTransactionById"
		},
		"59239": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.buildSteps"
		},
		"59240": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getStepByAction"
		},
		"59241": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getTransactionAndStepFromIdempotencyKey"
		},
		"59242": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.__constructor"
		},
		"59243": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator"
		},
		"59244": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"59245": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59246": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.id"
		},
		"59247": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.definition"
		},
		"59248": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.options"
		},
		"59249": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.isClone"
		},
		"59250": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.id"
		},
		"59251": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.invokeSteps"
		},
		"59252": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.compensateSteps"
		},
		"59253": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.definition"
		},
		"59254": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.options"
		},
		"59255": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getPreviousStep"
		},
		"59256": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getOptions"
		},
		"59257": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getOptions"
		},
		"59258": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getInvokeSteps"
		},
		"59259": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getCompensationSteps"
		},
		"59260": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.canMoveForward"
		},
		"59261": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.canMoveBackward"
		},
		"59262": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.canContinue"
		},
		"59263": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.hasExpired"
		},
		"59264": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.checkTransactionTimeout"
		},
		"59265": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.checkStepTimeout"
		},
		"59266": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.checkAllSteps"
		},
		"59267": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.computeCurrentTransactionState"
		},
		"59268": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.flagStepsToRevert"
		},
		"59269": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.executeNext"
		},
		"59270": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.finalizeTransaction"
		},
		"59271": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.prepareStepForExecution"
		},
		"59272": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.createStepPayload"
		},
		"59273": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.prepareHandlerArgs"
		},
		"59274": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.createStepExecutionPromise"
		},
		"59275": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.executeSyncStep"
		},
		"59276": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.executeAsyncStep"
		},
		"59277": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.handleStepExpiration"
		},
		"59278": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.handleStepSuccess"
		},
		"59279": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.handleStepFailure"
		},
		"59280": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.resume"
		},
		"59281": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.resume"
		},
		"59282": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"59283": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.cancelTransaction"
		},
		"59284": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.cancelTransaction"
		},
		"59285": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"59286": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "options"
		},
		"59287": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59288": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.preventExecuteNext"
		},
		"59289": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.parseFlowOptions"
		},
		"59290": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.createTransactionFlow"
		},
		"59291": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.beginTransaction"
		},
		"59292": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.beginTransaction"
		},
		"59293": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"59294": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59295": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transactionId"
		},
		"59296": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"59297": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.payload"
		},
		"59298": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.flowMetadata"
		},
		"59299": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"59300": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"59301": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentIdempotencyKey"
		},
		"59302": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.sourcePath"
		},
		"59303": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"59304": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"59305": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"59307": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.onLoad"
		},
		"59308": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59309": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59310": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"59311": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.retrieveExistingTransaction"
		},
		"59312": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.retrieveExistingTransaction"
		},
		"59313": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transactionId"
		},
		"59314": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "handler"
		},
		"59315": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "options"
		},
		"59316": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59317": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"59318": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.skipStep"
		},
		"59319": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.skipStep"
		},
		"59320": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"59321": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59322": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.responseIdempotencyKey"
		},
		"59323": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"59324": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction"
		},
		"59325": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepSuccess"
		},
		"59326": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepSuccess"
		},
		"59327": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"59328": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59329": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.responseIdempotencyKey"
		},
		"59330": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"59331": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction"
		},
		"59332": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.response"
		},
		"59333": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.onLoad"
		},
		"59334": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59335": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59336": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"59337": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepFailure"
		},
		"59338": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepFailure"
		},
		"59339": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"59340": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59341": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.responseIdempotencyKey"
		},
		"59342": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.error"
		},
		"59343": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"59344": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction"
		},
		"59345": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.onLoad"
		},
		"59346": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59347": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"59348": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"59349": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"59350": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"59351": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"59352": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"59353": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"59354": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"59355": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"59356": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"59357": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"59359": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.internal"
		},
		"59360": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"59361": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"59362": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"59363": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"59364": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"59365": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"59366": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"59367": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"59368": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"59369": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"59370": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"59371": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"59372": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.entity"
		},
		"59373": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.filterable"
		},
		"59374": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"59375": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"59376": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"59377": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"59378": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"59379": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"59380": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"59381": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"59382": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"59383": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"59384": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"59385": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "CustomModuleDefinition"
		},
		"59386": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59387": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"59388": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"59389": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"59390": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"59391": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleExports"
		},
		"59392": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59393": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.service"
		},
		"59394": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.loaders"
		},
		"59395": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"59396": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"59397": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"59398": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"59399": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"59400": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"59401": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"59402": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"59403": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"59404": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"59405": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"59406": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"59407": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.discoveryPath"
		},
		"59408": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"59409": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStepHandler"
		},
		"59410": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"59411": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"59412": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "actionId"
		},
		"59413": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "handlerType"
		},
		"59414": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "payload"
		},
		"59415": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "transaction"
		},
		"59416": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "step"
		},
		"59417": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "orchestrator"
		},
		"59418": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage"
		},
		"59419": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.get"
		},
		"59420": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.get"
		},
		"59421": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "key"
		},
		"59422": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "options"
		},
		"59423": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "__type"
		},
		"59424": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"59425": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.save"
		},
		"59426": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.save"
		},
		"59427": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "key"
		},
		"59428": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "data"
		},
		"59429": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "ttl"
		},
		"59430": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "options"
		},
		"59431": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleRetry"
		},
		"59432": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleRetry"
		},
		"59433": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"59434": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "step"
		},
		"59435": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "timestamp"
		},
		"59436": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "interval"
		},
		"59437": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearRetry"
		},
		"59438": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearRetry"
		},
		"59439": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"59440": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "step"
		},
		"59441": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleTransactionTimeout"
		},
		"59442": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleTransactionTimeout"
		},
		"59443": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"59444": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "timestamp"
		},
		"59445": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "interval"
		},
		"59446": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleStepTimeout"
		},
		"59447": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleStepTimeout"
		},
		"59448": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"59449": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "step"
		},
		"59450": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "timestamp"
		},
		"59451": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "interval"
		},
		"59452": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearTransactionTimeout"
		},
		"59453": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearTransactionTimeout"
		},
		"59454": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"59455": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearStepTimeout"
		},
		"59456": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearStepTimeout"
		},
		"59457": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"59458": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "step"
		},
		"59459": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearExpiredExecutions"
		},
		"59460": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearExpiredExecutions"
		},
		"59461": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint"
		},
		"59462": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.__constructor"
		},
		"59463": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint"
		},
		"59464": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "flow"
		},
		"59465": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "context"
		},
		"59466": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "errors"
		},
		"59467": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.flow"
		},
		"59468": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.context"
		},
		"59469": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.errors"
		},
		"59470": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "TransactionFlow"
		},
		"59471": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"59472": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.modelId"
		},
		"59473": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.options"
		},
		"59474": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.definition"
		},
		"59475": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transactionId"
		},
		"59476": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.runId"
		},
		"59477": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.metadata"
		},
		"59478": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"59479": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"59480": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentIdempotencyKey"
		},
		"59481": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.sourcePath"
		},
		"59482": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"59483": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"59484": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"59486": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasAsyncSteps"
		},
		"59487": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasFailedSteps"
		},
		"59488": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasSkippedOnFailureSteps"
		},
		"59489": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasWaitingSteps"
		},
		"59490": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasSkippedSteps"
		},
		"59491": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasRevertedSteps"
		},
		"59492": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.timedOutAt"
		},
		"59493": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.startedAt"
		},
		"59494": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.cancelledAt"
		},
		"59495": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.state"
		},
		"59496": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.steps"
		},
		"59497": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"59498": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"59500": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError"
		},
		"59501": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError.__constructor"
		},
		"59502": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError"
		},
		"59503": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "action"
		},
		"59504": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handlerType"
		},
		"59505": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "error"
		},
		"59506": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError.action"
		},
		"59507": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError.handlerType"
		},
		"59508": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError.error"
		},
		"59509": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState"
		},
		"59510": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.NOT_STARTED"
		},
		"59511": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.INVOKING"
		},
		"59512": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.WAITING_TO_COMPENSATE"
		},
		"59513": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.COMPENSATING"
		},
		"59514": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.DONE"
		},
		"59515": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.REVERTED"
		},
		"59516": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.FAILED"
		},
		"59517": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "BaseFlowRunOptions"
		},
		"59518": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"59519": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.context"
		},
		"59520": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.resultFrom"
		},
		"59521": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.throwOnError"
		},
		"59522": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.logOnError"
		},
		"59523": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.events"
		},
		"59524": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.container"
		},
		"59525": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoadedModule"
		},
		"59526": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59527": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"59528": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"59529": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState"
		},
		"59530": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.NOT_STARTED"
		},
		"59531": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.INVOKING"
		},
		"59532": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.COMPENSATING"
		},
		"59533": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.DONE"
		},
		"59534": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.REVERTED"
		},
		"59535": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.FAILED"
		},
		"59536": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.DORMANT"
		},
		"59537": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.SKIPPED"
		},
		"59538": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.SKIPPED_FAILURE"
		},
		"59539": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.TIMEOUT"
		},
		"59540": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus"
		},
		"59541": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.IDLE"
		},
		"59542": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.OK"
		},
		"59543": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.WAITING"
		},
		"59544": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.TEMPORARY_FAILURE"
		},
		"59545": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.PERMANENT_FAILURE"
		},
		"59546": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "TransactionOptions"
		},
		"59547": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"59548": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"59549": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"59550": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"59551": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"59552": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"59553": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleLoaderFunction"
		},
		"59554": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59555": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59556": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"59557": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"59558": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoaderOptions"
		},
		"59559": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59560": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.container"
		},
		"59561": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"59562": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.logger"
		},
		"59563": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dataLoaderOnly"
		},
		"59564": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "TOptions"
		},
		"59565": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"59566": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59567": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59568": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59569": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"59570": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"59571": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"59572": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload"
		},
		"59573": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload.__constructor"
		},
		"59574": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload"
		},
		"59575": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "metadata"
		},
		"59576": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "data"
		},
		"59577": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "context"
		},
		"59578": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload.metadata"
		},
		"59579": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload.data"
		},
		"59580": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload.context"
		},
		"59581": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "StepFeatures"
		},
		"59582": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"59583": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasAsyncSteps"
		},
		"59584": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasStepTimeouts"
		},
		"59585": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasRetriesTimeout"
		},
		"59586": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"59587": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"59588": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"59589": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger"
		},
		"59590": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.panic"
		},
		"59591": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59592": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59593": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "data"
		},
		"59594": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.shouldLog"
		},
		"59595": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59596": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59597": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"59598": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.setLogLevel"
		},
		"59599": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59600": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59601": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"59602": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.unsetLogLevel"
		},
		"59603": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59604": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59605": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.activity"
		},
		"59606": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59607": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59608": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"59609": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "config"
		},
		"59610": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.progress"
		},
		"59611": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59612": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59613": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"59614": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"59615": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.error"
		},
		"59616": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59617": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59618": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "messageOrError"
		},
		"59619": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "error"
		},
		"59620": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.failure"
		},
		"59621": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59622": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59623": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"59624": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"59625": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.success"
		},
		"59626": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59627": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59628": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"59629": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"59630": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.debug"
		},
		"59631": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59632": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59633": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"59634": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.info"
		},
		"59635": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59636": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59637": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"59638": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.warn"
		},
		"59639": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59640": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59641": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"59642": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.log"
		},
		"59643": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59644": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59645": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "args"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/workflows-sdk/src/utils/composer/index.ts"
		},
		"reflections": {
			"1": 57986
		}
	}
}
